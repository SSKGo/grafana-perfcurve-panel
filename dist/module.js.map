{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@grafana/ui\"","webpack:///external \"@grafana/data\"","webpack:///external \"d3\"","webpack:///external \"emotion\"","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///./Curves.tsx","webpack:///./PlotCircles.tsx","webpack:///./PerformanceCurvePanel.tsx","webpack:///./CurveLineForms.tsx","webpack:///./DynamicCurveLineForms.tsx","webpack:///./PlotSeriesForms.tsx","webpack:///./AxisForms.tsx","webpack:///./module.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","__","this","constructor","__assign","assign","arguments","length","apply","__values","iterator","next","done","TypeError","__read","e","ar","push","error","__spread","concat","__makeTemplateObject","cooked","raw","render","fill","stroke","data","curveGenerator","map","dataCurve","index","props","id","ref","node","datum","attr","PureComponent","radius","xScale","yScale","color","String","cx","cy","getStyles","wrapper","svg","legend","state","onChangeItem","onDelete","type","defaultValue","performCurveX","onBlur","currentTarget","setState","undefined","performCurveY","onChange","content","theme","variant","icon","size","onClick","updatedValue","newValues","onAdd","newValue","splice","curves","curve","onDeleteItem","xField","yField","fieldGroup","onAddItem","collapsible","label","item","onChangeGroup","onAddGroup","onDeleteGroup","axis","minValue","console","log","Number","maxValue","options","width","height","styles","padding","performanceCurveData","dataCurves","entries","performanceCurveDatum","curveXArray","split","curveYArray","Math","min","x","y","pointRadius","seriesName","series","mergedFields","frame","valueField","fields","find","field","valueFieldName","number","plotSetting","plotSettingLength","dataPlot","dataLegend","fieldX","fieldY","xData","values","toArray","yData","j","isVisible","yAxis","dynamicPerfCurve","dataDynamicCurves","k","xLabel","xAxis","xMin","xMax","yLabel","yMin","yMax","domain","range","ticks","className","xmlns","xmlnsXlink","viewBox","transform","y1","y2","x1","x2","items","displayMode","List","placement","setPanelOptions","builder","addCustomEditor","category","path","editor","description","addSelect","settings"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import React from 'react';\nimport * as d3 from 'd3';\n\ntype ChartDatum = { x: number; y: number };\n\ninterface CurvesProps {\n  fill: string;\n  stroke: string;\n  'stroke-width': string;\n  index: number;\n  data: ChartDatum[][];\n  curveGenerator: d3.Line<ChartDatum>;\n}\n\nexport class Curves extends React.PureComponent<CurvesProps> {\n  render() {\n    const { fill, stroke, data, curveGenerator } = this.props;\n    return (\n      <g>\n        {data.map((dataCurve, index) => {\n          return (\n            <path\n              fill={fill}\n              stroke={stroke}\n              stroke-width={this.props['stroke-width']}\n              id={'curve-' + this.props.index * 100 + index}\n              ref={node => {\n                return d3\n                  .select(node)\n                  .datum(dataCurve)\n                  .attr('d', curveGenerator);\n              }}\n            />\n          );\n        })}\n      </g>\n    );\n  }\n}\n","interface PlotCirclesProps {\n  data: Array<[number, number]>;\n  radius: number;\n  xScale: (a: number) => number;\n  yScale: (a: number) => number;\n  color: string;\n}\n\nimport React from 'react';\n\nexport class PlotCircles extends React.PureComponent<PlotCirclesProps> {\n  render() {\n    const { data, radius, xScale, yScale, color } = this.props;\n    return (\n      <g>\n        {data.map((datum: [number, number]) => {\n          return (\n            <circle r={String(radius)} cx={xScale(datum[0])} cy={yScale(datum[1])} fill={color}>\n              <title>{`${datum[0]}, ${datum[1]}`}</title>\n            </circle>\n          );\n        })}\n      </g>\n    );\n  }\n}\n","import React from 'react';\nimport { CanvasOptions } from 'types';\nimport { css, cx } from 'emotion';\nimport * as d3 from 'd3';\nimport { CurvePoints } from './types';\nimport { Curves } from './Curves';\nimport { PlotCircles } from './PlotCircles';\nimport { stylesFactory } from '@grafana/ui';\nimport { GraphLegend, LegendDisplayMode, LegendItem } from '@grafana/ui';\nimport { PanelProps } from '@grafana/data';\nimport { Field, FieldType, getFieldDisplayName } from '@grafana/data';\n\ninterface Props extends PanelProps<CanvasOptions> {}\n\nexport const PerformanceCurvePanel: React.FC<Props> = ({ options, data, width, height }) => {\n  const styles = getStyles();\n  const padding = { top: 20, right: 20, bottom: 70, left: 60 };\n\n  type ChartDatum = { x: number; y: number };\n  type CurveData = { color: string; data: ChartDatum[] };\n  type DynamicCurveData = { color: string; data: ChartDatum[][] };\n\n  // Read static performance curve data\n  const performanceCurveData: CurvePoints[] = options.performanceCurveData;\n  let dataCurves: CurveData[] = [];\n  for (const [index, performanceCurveDatum] of performanceCurveData.entries()) {\n    let curveXArray: string[] = performanceCurveDatum.performCurveX.split(',');\n    let curveYArray: string[] = performanceCurveDatum.performCurveY.split(',');\n    dataCurves[index] = { color: performanceCurveDatum.color, data: [] };\n    for (let i = 0; i < Math.min(curveXArray.length, curveYArray.length); i++) {\n      dataCurves[index].data[i] = { x: Number(curveXArray[i]), y: Number(curveYArray[i]) };\n    }\n  }\n\n  // Read point radius\n  const pointRadius: number = options.pointRadius;\n  // Create series name array\n  let seriesName: string[] = [];\n  for (let i = 0; i < data.series.length; i++) {\n    let name = data.series[i].name;\n    if (name) {\n      seriesName[i] = name;\n    } else {\n      seriesName[i] = '';\n    }\n  }\n\n  // Create merged fields from series\n  let mergedFields: Field[] = [];\n  data.series.map(frame => {\n    if (frame.name !== undefined) {\n      // time_series\n      let valueField = frame.fields.find(field => field.type === FieldType.number);\n      if (valueField) {\n        let valueFieldName = getFieldDisplayName(valueField, frame);\n        valueField.name = valueFieldName;\n        mergedFields.push(valueField);\n      }\n    } else {\n      // table\n      frame.fields.map(field => {\n        if (field.type === FieldType.number) {\n          let valueField = field;\n          mergedFields.push(valueField);\n        }\n      });\n    }\n  });\n  // Read data and prepare data array for plotting operation point\n  const plotSetting = options.plotSetting;\n  const plotSettingLength = plotSetting.length;\n  let dataPlot: Array<Array<[number, number]>> = [[]];\n  let dataLegend: LegendItem[] = [];\n  for (let i = 0; i < plotSettingLength; i++) {\n    let fieldX = mergedFields.find(field => field.name === plotSetting[i].xField);\n    let fieldY = mergedFields.find(field => field.name === plotSetting[i].yField);\n    if (fieldX && fieldY) {\n      let xData = fieldX.values.toArray();\n      let yData = fieldY.values.toArray();\n      // data for plot\n      dataPlot[i] = [];\n      for (let j = 0; j < xData.length; j++) {\n        dataPlot[i][j] = [xData[j], yData[j]];\n      }\n      // data for legend\n      dataLegend[i] = {\n        color: plotSetting[i].color,\n        label: plotSetting[i].label,\n        isVisible: true,\n        yAxis: 1,\n      };\n    }\n  }\n\n  // Read dynamic performance curve data\n  const dynamicPerfCurve = options.dynamicPerfCurve;\n  let dataDynamicCurves: DynamicCurveData[] = [];\n  for (let i = 0; i < dynamicPerfCurve.length; i++) {\n    let fieldGroup = dynamicPerfCurve[i].fieldGroup;\n    dataDynamicCurves[i] = {\n      color: options.dynamicPerfCurve[i].color,\n      data: [],\n    };\n    // j: x, y set\n    for (let j = 0; j < fieldGroup.length; j++) {\n      let fieldX = mergedFields.find(field => field.name === fieldGroup[j].xField);\n      let fieldY = mergedFields.find(field => field.name === fieldGroup[j].yField);\n      if (fieldX && fieldY) {\n        let xData = fieldX.values.toArray();\n        let yData = fieldY.values.toArray();\n        // data for curve\n        // k: time\n        for (let k = 0; k < xData.length; k++) {\n          if (dataDynamicCurves[i].data[k] === undefined) {\n            dataDynamicCurves[i].data[k] = [];\n          }\n          dataDynamicCurves[i].data[k][j] = { x: xData[k], y: yData[k] };\n        }\n      }\n    }\n  }\n\n  // Read X-axis and Y-Axis settings\n  const xLabel = options.xAxis.label;\n  const xMin = options.xAxis.minValue;\n  const xMax = options.xAxis.maxValue;\n  const yLabel = options.yAxis.label;\n  const yMin = options.yAxis.minValue;\n  const yMax = options.yAxis.maxValue;\n\n  // Scale\n  const xScale = d3\n    .scaleLinear()\n    .domain([xMin, xMax || 0.0])\n    .range([padding.left, width - padding.right]);\n  const yScale = d3\n    .scaleLinear()\n    .domain([yMin, yMax || 0.0])\n    .range([height - padding.bottom, padding.top]);\n  // Create axis\n  const xAxis = d3.axisBottom(xScale).ticks(width / 80);\n  const yAxis = d3.axisLeft(yScale).ticks(height / 80);\n\n  // Draw performance curve\n  const curveGenerator = d3\n    .line<ChartDatum>()\n    .curve(d3.curveBasis)\n    .x((d: ChartDatum) => xScale(d.x))\n    .y((d: ChartDatum) => yScale(d.y));\n\n  return (\n    <div\n      className={cx(\n        styles.wrapper,\n        css`\n          width: ${width}px;\n          height: ${height}px;\n        `\n      )}\n    >\n      <svg\n        className={styles.svg}\n        width={width}\n        height={height}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        viewBox={`0 0 ${width} ${height}`}\n      >\n        {/* xAxis */}\n        <g\n          transform={`translate(0, ${height - padding.bottom})`}\n          ref={node => {\n            d3.select(node).call(xAxis as any);\n          }}\n        >\n          <text\n            x={(width - padding.left - padding.right) / 2 + padding.left}\n            y=\"40\"\n            text-anchor=\"middle\"\n            fill=\"currentColor\"\n            font-size=\"8pt\"\n          >\n            {xLabel}\n          </text>\n        </g>\n        {/* yAxis */}\n        <g\n          transform={`translate(${padding.left}, 0)`}\n          ref={node => {\n            d3.select(node).call(yAxis as any);\n          }}\n        >\n          <text\n            x={-(height - padding.top - padding.bottom) / 2}\n            y=\"-50\"\n            text-anchor=\"middle\"\n            fill=\"currentColor\"\n            transform=\"rotate(-90)\"\n            font-size=\"8pt\"\n          >\n            {yLabel}\n          </text>\n        </g>\n        {/* Grid Vertical Lines */}\n        <g>\n          {xScale.ticks().map((d: number) => {\n            return (\n              <line\n                stroke=\"currentColor\"\n                stroke-opacity=\"0.1\"\n                y1={padding.top}\n                y2={height - padding.bottom}\n                x1={0.5 + xScale(d)}\n                x2={0.5 + xScale(d)}\n              ></line>\n            );\n          })}\n        </g>\n        {/* Grid Horizontal Lines */}\n        <g>\n          {yScale.ticks().map((d: number) => {\n            return (\n              <line\n                stroke=\"currentColor\"\n                stroke-opacity=\"0.1\"\n                x1={padding.left}\n                x2={width - padding.right}\n                y1={0.5 + yScale(d)}\n                y2={0.5 + yScale(d)}\n              ></line>\n            );\n          })}\n        </g>\n        {/* Static Curve */}\n        {dataCurves.map((dataCurve, index) => {\n          return (\n            <g id=\"static-curve-group\">\n              <path\n                fill=\"none\"\n                stroke={dataCurve.color}\n                stroke-width=\"1.5\"\n                id={'curve-' + index}\n                ref={node => {\n                  d3.select(node)\n                    .datum(dataCurve.data)\n                    .attr('d', curveGenerator);\n                }}\n              />\n            </g>\n          );\n        })}\n        {dataDynamicCurves.map((dataCurve, index) => {\n          return (\n            <g id=\"dynamic-curve-group\">\n              <Curves\n                fill=\"none\"\n                stroke={dataCurve.color}\n                stroke-width=\"1.5\"\n                index={index}\n                data={dataCurve.data}\n                curveGenerator={curveGenerator}\n              ></Curves>\n            </g>\n          );\n        })}\n        {/* Plot */}\n        <g id=\"plot-group\">\n          {dataPlot.map((data, i) => {\n            return (\n              <PlotCircles\n                data={data}\n                radius={pointRadius}\n                xScale={xScale}\n                yScale={yScale}\n                color={plotSetting[i].color}\n              ></PlotCircles>\n            );\n          })}\n        </g>\n      </svg>\n      <div className={styles.legend}>\n        <GraphLegend items={dataLegend} displayMode={LegendDisplayMode.List} placement=\"under\"></GraphLegend>\n      </div>\n    </div>\n  );\n};\n\nconst getStyles = stylesFactory(() => {\n  return {\n    wrapper: css`\n      position: relative;\n    `,\n    svg: css`\n      position: absolute;\n      top: 0;\n      left: 0;\n    `,\n    legend: css`\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      padding: 10px;\n    `,\n  };\n});\n","import React from 'react';\nimport { PanelOptionsEditorProps } from '@grafana/data';\nimport { getColorFromHexRgbOrName } from '@grafana/data';\nimport { Button, ColorPicker, Tooltip, Input, HorizontalGroup, Label, VerticalGroup } from '@grafana/ui';\nimport { CurvePoints } from './types';\n\ninterface CurveLineFormProps {\n  value: CurvePoints;\n  index?: number;\n  styles?: any;\n  onChangeItem?: (a: CurvePoints, b: number) => void | undefined;\n  onDelete?: (a: number) => void;\n}\n\nclass CurveLineForm extends React.PureComponent<CurveLineFormProps> {\n  constructor(props: CurveLineFormProps) {\n    super(props);\n    this.state = { ...props.value };\n  }\n  render() {\n    const { value, index, onChangeItem, onDelete } = this.props;\n    return (\n      <HorizontalGroup>\n        <Label>X</Label>\n        <Input\n          type=\"text\"\n          name=\"performCurveX\"\n          defaultValue={value.performCurveX}\n          onBlur={e => {\n            const performCurveX = e.currentTarget.value;\n            this.setState(() => {\n              return { performCurveX: performCurveX };\n            });\n            onChangeItem && index !== undefined && onChangeItem({ ...value, performCurveX: performCurveX }, index);\n          }}\n        />\n        <Label>Y</Label>\n        <Input\n          type=\"text\"\n          name=\"performCurveY\"\n          defaultValue={value.performCurveY}\n          onBlur={e => {\n            const performCurveY = e.currentTarget.value;\n            this.setState(() => {\n              return { performCurveY: performCurveY };\n            });\n            onChangeItem && index !== undefined && onChangeItem({ ...value, performCurveY: performCurveY }, index);\n          }}\n        />\n        <Label>Color</Label>\n        <ColorPicker\n          color={value.color}\n          onChange={color => {\n            this.setState(() => {\n              return { color: color };\n            });\n            onChangeItem && index !== undefined && onChangeItem({ ...value, color: color }, index);\n          }}\n        ></ColorPicker>\n        {onDelete && index !== undefined && (\n          <Tooltip content=\"Delete this performance curve.\" theme={'info'}>\n            <Button\n              variant=\"destructive\"\n              icon=\"trash-alt\"\n              size=\"sm\"\n              onClick={() => {\n                onDelete(index);\n              }}\n            >\n              Remove\n            </Button>\n          </Tooltip>\n        )}\n      </HorizontalGroup>\n    );\n  }\n}\n\nexport class CurveLineForms extends React.PureComponent<PanelOptionsEditorProps<CurvePoints[]>> {\n  onChangeItem = (updatedValue: CurvePoints, index: number) => {\n    let newValues = [...this.props.value];\n    newValues[index] = updatedValue;\n    this.props.onChange(newValues);\n  };\n  onAdd = (newValue: CurvePoints) => {\n    let newValues = [...this.props.value, newValue];\n    this.props.onChange(newValues);\n  };\n  onDelete = (index: number) => {\n    let newValues = [...this.props.value];\n    newValues.splice(index, 1);\n    this.props.onChange(newValues);\n  };\n  render() {\n    const curves = this.props.value;\n    return (\n      <VerticalGroup>\n        <Tooltip content=\"Add a new performance curve.\" theme={'info'}>\n          <Button\n            variant=\"secondary\"\n            size=\"sm\"\n            icon=\"plus\"\n            onClick={() => {\n              this.onAdd({\n                performCurveX: '',\n                performCurveY: '',\n                color: getColorFromHexRgbOrName('rgba(136, 136, 136, 0.6)'),\n              } as CurvePoints);\n            }}\n          >\n            Add\n          </Button>\n        </Tooltip>\n        {curves.map((curve: CurvePoints, index: number) => {\n          return (\n            <CurveLineForm\n              key={index}\n              value={curve}\n              index={index}\n              onChangeItem={this.onChangeItem}\n              onDelete={this.onDelete}\n              // styles={styles}\n            />\n          );\n        })}\n      </VerticalGroup>\n    );\n  }\n}\n","import React from 'react';\nimport { getColorFromHexRgbOrName } from '@grafana/data';\nimport { PanelOptionsEditorProps } from '@grafana/data';\nimport { Button, ControlledCollapse, ColorPicker, HorizontalGroup, Input, Label, VerticalGroup } from '@grafana/ui';\nimport { CurveGroup, CurveItem } from './types';\n\ninterface CurveItemFormProps {\n  value: CurveItem;\n  index: number;\n  onChangeItem: (a: CurveItem, b: number) => void | undefined;\n  onDeleteItem: (a: number) => void;\n}\n\nclass CurveItemForm extends React.PureComponent<CurveItemFormProps> {\n  constructor(props: CurveItemFormProps) {\n    super(props);\n    this.state = { ...props.value };\n  }\n  render() {\n    const { value, index, onChangeItem, onDeleteItem } = this.props;\n    return (\n      <HorizontalGroup>\n        <Label>X</Label>\n        <Input\n          type=\"text\"\n          name=\"xField\"\n          defaultValue={value.xField}\n          onBlur={e => {\n            const xField = e.currentTarget.value;\n            this.setState(() => {\n              return { xField: xField };\n            });\n            onChangeItem({ ...value, xField: xField }, index);\n          }}\n        />\n        <Label>Y</Label>\n        <Input\n          type=\"text\"\n          name=\"yField\"\n          defaultValue={value.yField}\n          onBlur={e => {\n            const yField = e.currentTarget.value;\n            this.setState(() => {\n              return { yField: yField };\n            });\n            onChangeItem({ ...value, yField: yField }, index);\n          }}\n        />\n        <Button\n          variant=\"destructive\"\n          icon=\"trash-alt\"\n          size=\"sm\"\n          onClick={() => {\n            onDeleteItem(index);\n          }}\n        >\n          Remove\n        </Button>\n      </HorizontalGroup>\n    );\n  }\n}\n\ninterface CurveGroupFormProps {\n  value: CurveGroup;\n  index: number;\n  onChange: (a: CurveGroup, b: number) => void | undefined;\n  onDelete: (a: number) => void;\n}\n\nclass CurveGroupForm extends React.PureComponent<CurveGroupFormProps> {\n  constructor(props: CurveGroupFormProps) {\n    super(props);\n    this.state = { ...props.value };\n  }\n\n  onChangeItem = (updatedValue: CurveItem, index: number) => {\n    let newValues = [...this.props.value.fieldGroup];\n    newValues[index] = updatedValue;\n    this.props.onChange({ fieldGroup: newValues, color: this.props.value.color }, this.props.index);\n  };\n  onAddItem = (newValue: CurveItem) => {\n    let newValues = [...this.props.value.fieldGroup, newValue];\n    this.props.onChange({ fieldGroup: newValues, color: this.props.value.color }, this.props.index);\n  };\n  onDeleteItem = (index: number) => {\n    let newValues = [...this.props.value.fieldGroup];\n    newValues.splice(index, 1);\n    this.props.onChange({ fieldGroup: newValues, color: this.props.value.color }, this.props.index);\n  };\n  render() {\n    const { value, index, onChange, onDelete } = this.props;\n    return (\n      <ControlledCollapse collapsible label={`Line Group ${index}`}>\n        <VerticalGroup>\n          <HorizontalGroup>\n            <Button\n              variant=\"destructive\"\n              icon=\"trash-alt\"\n              size=\"sm\"\n              onClick={() => {\n                onDelete(index);\n              }}\n            >\n              Remove Line Group\n            </Button>\n          </HorizontalGroup>\n          <HorizontalGroup>\n            <Button\n              variant=\"secondary\"\n              size=\"sm\"\n              icon=\"plus\"\n              onClick={() => {\n                this.onAddItem({\n                  xField: '',\n                  yField: '',\n                } as CurveItem);\n              }}\n            >\n              Add Field\n            </Button>\n\n            <Label>Color</Label>\n            <ColorPicker\n              color={value.color}\n              onChange={color => {\n                this.setState(() => {\n                  return { color: color };\n                });\n                onChange({ ...value, color: color }, index);\n              }}\n            ></ColorPicker>\n          </HorizontalGroup>\n          {value.fieldGroup.map((item: CurveItem, index: number) => {\n            return (\n              <CurveItemForm\n                key={index}\n                value={item}\n                index={index}\n                onChangeItem={this.onChangeItem}\n                onDeleteItem={this.onDeleteItem}\n              />\n            );\n          })}\n        </VerticalGroup>\n      </ControlledCollapse>\n    );\n  }\n}\n\nexport class DynamicCurveLineForms extends React.PureComponent<PanelOptionsEditorProps<CurveGroup[]>> {\n  onChangeGroup = (updatedValue: CurveGroup, index: number) => {\n    let newValues = [...this.props.value];\n    newValues[index] = updatedValue;\n    this.props.onChange(newValues);\n  };\n  onAddGroup = (newValue: CurveGroup) => {\n    let newValues = [...this.props.value, newValue];\n    this.props.onChange(newValues);\n  };\n  onDeleteGroup = (index: number) => {\n    let newValues = [...this.props.value];\n    newValues.splice(index, 1);\n    this.props.onChange(newValues);\n  };\n  render() {\n    const curves = this.props.value;\n    return (\n      <VerticalGroup>\n        <Button\n          variant=\"secondary\"\n          size=\"sm\"\n          icon=\"plus\"\n          onClick={() => {\n            this.onAddGroup({\n              fieldGroup: [{ xField: '', yField: '' }],\n              color: getColorFromHexRgbOrName('rgba(136, 136, 136, 0.6)'),\n            } as CurveGroup);\n          }}\n        >\n          Add\n        </Button>\n        {curves.map((curve: CurveGroup, index: number) => {\n          return (\n            <CurveGroupForm\n              key={index}\n              value={curve}\n              index={index}\n              onChange={this.onChangeGroup}\n              onDelete={this.onDeleteGroup}\n            />\n          );\n        })}\n      </VerticalGroup>\n    );\n  }\n}\n","import React from 'react';\nimport { getColorFromHexRgbOrName } from '@grafana/data';\nimport { PanelOptionsEditorProps } from '@grafana/data';\nimport { Button, ColorPicker, HorizontalGroup, Input, Label, Tooltip, VerticalGroup } from '@grafana/ui';\nimport { PlotSeries } from './types';\n\ninterface PlotSeriesrops {\n  value: PlotSeries;\n  index?: number;\n  styles?: any;\n  onChangeItem?: (a: PlotSeries, b: number) => void | undefined;\n  onDelete?: (a: number) => void;\n}\n\nclass PlotSeriesForm extends React.PureComponent<PlotSeriesrops> {\n  constructor(props: PlotSeriesrops) {\n    super(props);\n    this.state = { ...props.value };\n  }\n  render() {\n    const { value, index, onChangeItem, onDelete } = this.props;\n    return (\n      <HorizontalGroup>\n        <Label>Label</Label>\n        <Input\n          type=\"text\"\n          name=\"label\"\n          defaultValue={value.label}\n          onBlur={e => {\n            const label = e.currentTarget.value;\n            this.setState(() => {\n              return { label: label };\n            });\n            onChangeItem && index !== undefined && onChangeItem({ ...value, label: label }, index);\n          }}\n        />\n        <Label>X</Label>\n        <Input\n          type=\"text\"\n          name=\"xField\"\n          defaultValue={value.xField}\n          onBlur={e => {\n            const xField = e.currentTarget.value;\n            this.setState(() => {\n              return { xField: xField };\n            });\n            onChangeItem && index !== undefined && onChangeItem({ ...value, xField: xField }, index);\n          }}\n        />\n        <Label>Y</Label>\n        <Input\n          type=\"text\"\n          name=\"yField\"\n          defaultValue={value.yField}\n          onBlur={e => {\n            const yField = e.currentTarget.value;\n            this.setState(() => {\n              return { yField: yField };\n            });\n            onChangeItem && index !== undefined && onChangeItem({ ...value, yField: yField }, index);\n          }}\n        />\n        <Label>Color</Label>\n        <ColorPicker\n          color={value.color}\n          onChange={color => {\n            this.setState(() => {\n              return { color: color };\n            });\n            onChangeItem && index !== undefined && onChangeItem({ ...value, color: color }, index);\n          }}\n        ></ColorPicker>\n        {onDelete && index !== undefined && (\n          <Tooltip content=\"Delete this plot.\" theme={'info'}>\n            <Button\n              variant=\"destructive\"\n              icon=\"trash-alt\"\n              size=\"sm\"\n              onClick={() => {\n                onDelete(index);\n              }}\n            >\n              Remove\n            </Button>\n          </Tooltip>\n        )}\n      </HorizontalGroup>\n    );\n  }\n}\n\nexport class PlotSeriesForms extends React.PureComponent<PanelOptionsEditorProps<PlotSeries[]>> {\n  onChangeItem = (updatedValue: PlotSeries, index: number) => {\n    let newValues = [...this.props.value];\n    newValues[index] = updatedValue;\n    this.props.onChange(newValues);\n  };\n  onAdd = (newValue: PlotSeries) => {\n    let newValues = [...this.props.value, newValue];\n    this.props.onChange(newValues);\n  };\n  onDelete = (index: number) => {\n    let newValues = [...this.props.value];\n    newValues.splice(index, 1);\n    this.props.onChange(newValues);\n  };\n  render() {\n    const curves = this.props.value;\n    return (\n      <VerticalGroup>\n        <Tooltip content=\"Add a new plot.\" theme={'info'}>\n          <Button\n            variant=\"secondary\"\n            size=\"sm\"\n            icon=\"plus\"\n            onClick={() => {\n              this.onAdd({\n                label: '',\n                xField: '',\n                yField: '',\n                color: getColorFromHexRgbOrName('rgba(136, 136, 136, 0.6)'),\n              } as PlotSeries);\n            }}\n          >\n            Add\n          </Button>\n        </Tooltip>\n        {curves.map((curve: PlotSeries, index: number) => {\n          return (\n            <PlotSeriesForm\n              key={index}\n              value={curve}\n              index={index}\n              onChangeItem={this.onChangeItem}\n              onDelete={this.onDelete}\n            />\n          );\n        })}\n      </VerticalGroup>\n    );\n  }\n}\n","import React from 'react';\nimport { PanelOptionsEditorProps } from '@grafana/data';\nimport { Input, HorizontalGroup, Label, VerticalGroup } from '@grafana/ui';\nimport { Axis } from './types';\n\nexport class AxisForms extends React.PureComponent<PanelOptionsEditorProps<Axis>> {\n  render() {\n    const axis = this.props.value;\n    return (\n      <VerticalGroup>\n        <HorizontalGroup>\n          <Label>Min</Label>\n          <Input\n            type=\"number\"\n            name=\"minValue\"\n            value={axis.minValue}\n            onChange={e => {\n              console.log('minValue');\n              const minValue = e.currentTarget.value;\n              // this.setState(() => {\n              //   return { minValue: Number(minValue) };\n              // });\n              this.props.onChange({ ...this.props.value, minValue: Number(minValue) });\n              console.log(this.props.value);\n            }}\n          />\n          <Label>Max</Label>\n          <Input\n            type=\"number\"\n            name=\"maxValue\"\n            defaultValue={axis.maxValue}\n            onChange={e => {\n              const maxValue = e.currentTarget.value;\n              this.props.onChange({ ...this.props.value, maxValue: Number(maxValue) });\n              // this.setState(() => {\n              //   return { maxValue: Number(maxValue) };\n              // });\n            }}\n          />\n          <Label>Label</Label>\n          <Input\n            type=\"text\"\n            name=\"label\"\n            defaultValue={axis.label}\n            onChange={e => {\n              const label = e.currentTarget.value;\n              this.props.onChange({ ...this.props.value, label: label });\n              this.setState(() => {\n                return { label: label };\n              });\n            }}\n          />\n        </HorizontalGroup>\n      </VerticalGroup>\n    );\n  }\n}\n","import { PanelPlugin } from '@grafana/data';\nimport { CanvasOptions } from './types';\nimport { PerformanceCurvePanel } from './PerformanceCurvePanel';\nimport { CurveLineForms } from './CurveLineForms';\nimport { DynamicCurveLineForms } from './DynamicCurveLineForms';\nimport { PlotSeriesForms } from './PlotSeriesForms';\nimport { AxisForms } from './AxisForms';\nimport { getColorFromHexRgbOrName } from '@grafana/data';\n\nexport const plugin = new PanelPlugin<CanvasOptions>(PerformanceCurvePanel).setPanelOptions(builder => {\n  return builder\n    .addCustomEditor({\n      category: ['Canvas Setting', 'Axis'],\n      id: 'xAxis',\n      path: 'xAxis',\n      name: 'X-Axis Setting',\n      defaultValue: {\n        minValue: 0,\n        maxValue: 60,\n        label: 'Flowrate',\n      },\n      editor: AxisForms,\n    })\n    .addCustomEditor({\n      category: ['Canvas Setting', 'Axis'],\n      id: 'yAxis',\n      path: 'yAxis',\n      name: 'Y-Axis Setting',\n      defaultValue: {\n        minValue: 0,\n        maxValue: 100,\n        label: 'Pressure',\n      },\n      editor: AxisForms,\n    })\n    .addCustomEditor({\n      category: ['Canvas Setting', 'Performance Curve'],\n      id: 'performanceCurveData',\n      path: 'performanceCurveData',\n      name: 'Static Performance Curve Data',\n      description: 'Input sample data points of peformance curve. Program automatically draw smooth lines.',\n      defaultValue: [\n        {\n          performCurveX: '10,20,30,40,50',\n          performCurveY: '80,78,72,62,48',\n          color: getColorFromHexRgbOrName('rgba(136, 136, 136, 0.6)'),\n        },\n      ],\n      editor: CurveLineForms,\n    })\n    .addCustomEditor({\n      category: ['Canvas Setting', 'Performance Curve'],\n      id: 'dynamicPerfCurve',\n      path: 'dynamicPerfCurve',\n      name: 'Dynamic Performance Curve Data',\n      description: 'Set filed names to draw dynamic peformance curve. Program automatically draw smooth lines.',\n      defaultValue: [],\n      editor: DynamicCurveLineForms,\n    })\n\n    .addCustomEditor({\n      category: ['Plot Setting'],\n      id: 'plotSetting',\n      path: 'plotSetting',\n      name: 'Plot Setting',\n      description: 'Set field names of X and Y axis to plot operation points. Set alias in query to set field name.',\n      defaultValue: [\n        {\n          label: 'Label Name',\n          xField: 'Field X',\n          yField: 'Field Y',\n          color: getColorFromHexRgbOrName('rgba(136, 136, 136, 0.6)'),\n        },\n      ],\n      editor: PlotSeriesForms,\n    })\n    .addSelect({\n      category: ['Plot Setting'],\n      path: 'pointRadius',\n      name: 'Point Radius',\n      defaultValue: 2,\n      settings: {\n        options: [\n          {\n            label: '0.5',\n            value: 0.5,\n          },\n          {\n            label: '1',\n            value: 1,\n          },\n          {\n            label: '2',\n            value: 2,\n          },\n          {\n            label: '3',\n            value: 3,\n          },\n          {\n            label: '4',\n            value: 4,\n          },\n          {\n            label: '5',\n            value: 5,\n          },\n          {\n            label: '6',\n            value: 6,\n          },\n          {\n            label: '7',\n            value: 7,\n          },\n          {\n            label: '8',\n            value: 8,\n          },\n          {\n            label: '9',\n            value: 9,\n          },\n          {\n            label: '10',\n            value: 10,\n          },\n        ],\n      },\n    });\n});\n"],"sourceRoot":""}
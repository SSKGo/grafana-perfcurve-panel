{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@grafana/ui\"","webpack:///external \"@grafana/data\"","webpack:///external \"d3\"","webpack:///external \"emotion\"","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///./PlotCircles.tsx","webpack:///./PerformanceCurvePanel.tsx","webpack:///./CurveLineForms.tsx","webpack:///./PlotSeriesForms.tsx","webpack:///./module.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","__","this","constructor","__assign","assign","arguments","length","apply","__values","iterator","next","done","TypeError","__read","e","ar","push","error","__spread","concat","__makeTemplateObject","cooked","raw","render","data","radius","xScale","yScale","color","map","datum","String","cx","cy","fill","PureComponent","getStyles","wrapper","svg","legend","props","state","index","onChangeItem","onDelete","type","defaultValue","performCurveX","onBlur","currentTarget","setState","undefined","performCurveY","content","theme","variant","icon","size","onClick","updatedValue","newValues","onChange","onAdd","newValue","splice","curves","curve","label","xField","yField","options","width","height","styles","padding","xLabel","yLabel","xMax","yMax","performanceCurveData","dataCurves","entries","performanceCurveDatum","curveXArray","split","curveYArray","Math","min","x","Number","y","pointRadius","seriesName","series","dataPlot","dataLegend","plotSetting","plotSettingLength","mergedFields","frame","valueField","fields","find","field","valueFieldName","number","fieldX","fieldY","xData","values","toArray","yData","j","isVisible","yAxis","domain","range","xAxis","ticks","curveGenerator","curveColor","className","xmlns","xmlnsXlink","viewBox","transform","ref","node","stroke","y1","y2","x1","x2","dataCurve","id","attr","items","displayMode","List","placement","setPanelOptions","builder","addTextInput","category","path","addNumberInput","addColorPicker","settings","allowUndefined","disableNamedColors","textWhenUndefined","addCustomEditor","description","editor","xSeries","ySeries","addSelect"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","interface PlotCirclesProps {\n  data: Array<[number, number]>;\n  radius: number;\n  xScale: (a: number) => number;\n  yScale: (a: number) => number;\n  color: string;\n}\n\nimport React from 'react';\n\nexport class PlotCircles extends React.PureComponent<PlotCirclesProps> {\n  render() {\n    const { data, radius, xScale, yScale, color } = this.props;\n    return (\n      <g>\n        {data.map((datum: [number, number]) => {\n          return (\n            <circle r={String(radius)} cx={xScale(datum[0])} cy={yScale(datum[1])} fill={color}>\n              <title>{`${datum[0]}, ${datum[1]}`}</title>\n            </circle>\n          );\n        })}\n      </g>\n    );\n  }\n}\n","import React from 'react';\nimport { CanvasOptions } from 'types';\nimport { css, cx } from 'emotion';\nimport * as d3 from 'd3';\nimport { CurvePoints } from './types';\nimport { PlotCircles } from './PlotCircles';\nimport { stylesFactory } from '@grafana/ui';\nimport { GraphLegend, LegendDisplayMode, LegendItem } from '@grafana/ui';\nimport { PanelProps } from '@grafana/data';\nimport { Field, FieldType, getFieldDisplayName } from '@grafana/data';\n\ninterface Props extends PanelProps<CanvasOptions> {}\n\nexport const PerformanceCurvePanel: React.FC<Props> = ({ options, data, width, height }) => {\n  const styles = getStyles();\n  const padding = { top: 20, right: 20, bottom: 70, left: 60 };\n\n  type ChartDatum = { x: number; y: number };\n\n  // Read operation data label\n  const xLabel = options.xLabel;\n  const yLabel = options.yLabel;\n\n  // Read max x and max y for scaling\n  const xMax = options.xMax;\n  const yMax = options.yMax;\n\n  // Read performance curve data\n  const performanceCurveData: CurvePoints[] = options.performanceCurveData;\n  let dataCurves: ChartDatum[][] = [];\n  for (const [index, performanceCurveDatum] of performanceCurveData.entries()) {\n    let curveXArray: string[] = performanceCurveDatum.performCurveX.split(',');\n    let curveYArray: string[] = performanceCurveDatum.performCurveY.split(',');\n    dataCurves[index] = [];\n    for (let i = 0; i < Math.min(curveXArray.length, curveYArray.length); i++) {\n      dataCurves[index][i] = { x: Number(curveXArray[i]), y: Number(curveYArray[i]) };\n    }\n  }\n\n  // Read point radius\n  const pointRadius: number = options.pointRadius;\n  // Create series name array\n  let seriesName: string[] = [];\n  for (let i = 0; i < data.series.length; i++) {\n    let name = data.series[i].name;\n    if (name) {\n      seriesName[i] = name;\n    } else {\n      seriesName[i] = '';\n    }\n  }\n  // Read data and prepare data array for plot\n  let dataPlot: Array<Array<[number, number]>> = [[]];\n  let dataLegend: LegendItem[] = [];\n  const plotSetting = options.plotSetting;\n  const plotSettingLength = plotSetting.length;\n\n  // Create merged fields from series\n  let mergedFields: Field[] = [];\n  data.series.map(frame => {\n    if (frame.name !== undefined) {\n      // time_series\n      let valueField = frame.fields.find(field => field.type === FieldType.number);\n      if (valueField) {\n        let valueFieldName = getFieldDisplayName(valueField, frame);\n        valueField.name = valueFieldName;\n        mergedFields.push(valueField);\n      }\n    } else {\n      // table\n      frame.fields.map(field => {\n        if (field.type === FieldType.number) {\n          let valueField = field;\n          mergedFields.push(valueField);\n        }\n      });\n    }\n  });\n\n  for (let i = 0; i < plotSettingLength; i++) {\n    let fieldX = mergedFields.find(field => field.name === plotSetting[i].xField);\n    let fieldY = mergedFields.find(field => field.name === plotSetting[i].yField);\n    if (fieldX && fieldY) {\n      let xData = fieldX.values.toArray();\n      let yData = fieldY.values.toArray();\n      // data for plot\n      dataPlot[i] = [];\n      for (let j = 0; j < xData.length; j++) {\n        dataPlot[i][j] = [xData[j], yData[j]];\n      }\n      // data for legend\n      dataLegend[i] = {\n        color: plotSetting[i].color,\n        label: plotSetting[i].label,\n        isVisible: true,\n        yAxis: 1,\n      };\n    }\n  }\n\n  // Scale\n  const xScale = d3\n    .scaleLinear()\n    .domain([0, xMax || 0.0])\n    .range([padding.left, width - padding.right]);\n  const yScale = d3\n    .scaleLinear()\n    .domain([0, yMax || 0.0])\n    .range([height - padding.bottom, padding.top]);\n  // Create axis\n  const xAxis = d3.axisBottom(xScale).ticks(width / 80);\n  const yAxis = d3.axisLeft(yScale).ticks(height / 80);\n\n  // Draw performance curve\n  const curveGenerator = d3\n    .line<ChartDatum>()\n    .curve(d3.curveBasis)\n    .x((d: ChartDatum) => xScale(d.x))\n    .y((d: ChartDatum) => yScale(d.y));\n\n  // Select performance curve color\n  let curveColor: string = options.curveColor;\n  return (\n    <div\n      className={cx(\n        styles.wrapper,\n        css`\n          width: ${width}px;\n          height: ${height}px;\n        `\n      )}\n    >\n      <svg\n        className={styles.svg}\n        width={width}\n        height={height}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        viewBox={`0 0 ${width} ${height}`}\n      >\n        {/* xAxis */}\n        <g\n          transform={`translate(0, ${height - padding.bottom})`}\n          ref={node => {\n            d3.select(node).call(xAxis as any);\n          }}\n        >\n          <text\n            x={(width - padding.left - padding.right) / 2 + padding.left}\n            y=\"40\"\n            text-anchor=\"middle\"\n            fill=\"currentColor\"\n            font-size=\"8pt\"\n          >\n            {xLabel}\n          </text>\n        </g>\n        {/* yAxis */}\n        <g\n          transform={`translate(${padding.left}, 0)`}\n          ref={node => {\n            d3.select(node).call(yAxis as any);\n          }}\n        >\n          <text\n            x={-(height - padding.top - padding.bottom) / 2}\n            y=\"-50\"\n            text-anchor=\"middle\"\n            fill=\"currentColor\"\n            transform=\"rotate(-90)\"\n            font-size=\"8pt\"\n          >\n            {yLabel}\n          </text>\n        </g>\n        {/* Grid Vertical Lines */}\n        <g>\n          {xScale.ticks().map((d: number) => {\n            return (\n              <line\n                stroke=\"currentColor\"\n                stroke-opacity=\"0.1\"\n                y1={padding.top}\n                y2={height - padding.bottom}\n                x1={0.5 + xScale(d)}\n                x2={0.5 + xScale(d)}\n              ></line>\n            );\n          })}\n        </g>\n        {/* Grid Horizontal Lines */}\n        <g>\n          {yScale.ticks().map((d: number) => {\n            return (\n              <line\n                stroke=\"currentColor\"\n                stroke-opacity=\"0.1\"\n                x1={padding.left}\n                x2={width - padding.right}\n                y1={0.5 + yScale(d)}\n                y2={0.5 + yScale(d)}\n              ></line>\n            );\n          })}\n        </g>\n        {/* Curve */}\n        {dataCurves.map((dataCurve, index) => {\n          return (\n            <g id=\"curve-group\">\n              <path\n                fill=\"none\"\n                stroke={curveColor}\n                stroke-width=\"1.5\"\n                id={'curve-' + { index }}\n                ref={node => {\n                  d3.select(node)\n                    .datum(dataCurve)\n                    .attr('d', curveGenerator);\n                }}\n              />\n            </g>\n          );\n        })}\n        {/* Plot */}\n        <g id=\"plot-group\">\n          {dataPlot.map((data, i) => {\n            return (\n              <PlotCircles\n                data={data}\n                radius={pointRadius}\n                xScale={xScale}\n                yScale={yScale}\n                color={plotSetting[i].color}\n              ></PlotCircles>\n            );\n          })}\n        </g>\n      </svg>\n      <div className={styles.legend}>\n        <GraphLegend items={dataLegend} displayMode={LegendDisplayMode.List} placement=\"under\"></GraphLegend>\n      </div>\n    </div>\n  );\n};\n\nconst getStyles = stylesFactory(() => {\n  return {\n    wrapper: css`\n      position: relative;\n    `,\n    svg: css`\n      position: absolute;\n      top: 0;\n      left: 0;\n    `,\n    legend: css`\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      padding: 10px;\n    `,\n  };\n});\n","import React from 'react';\nimport { PanelOptionsEditorProps } from '@grafana/data';\nimport { Button, Tooltip, Input, HorizontalGroup, Label, VerticalGroup } from '@grafana/ui';\nimport { CurvePoints } from './types';\n\ninterface CurveLineFormProps {\n  value: CurvePoints;\n  index?: number;\n  styles?: any;\n  onChangeItem?: (a: CurvePoints, b: number) => void | undefined;\n  onDelete?: (a: number) => void;\n}\n\nclass CurveLineForm extends React.PureComponent<CurveLineFormProps> {\n  constructor(props: CurveLineFormProps) {\n    super(props);\n    this.state = { ...props.value };\n  }\n  render() {\n    const { value, index, onChangeItem, onDelete } = this.props;\n    return (\n      <HorizontalGroup>\n        <Label>X</Label>\n        <Input\n          type=\"text\"\n          name=\"performCurveX\"\n          defaultValue={value.performCurveX}\n          onBlur={e => {\n            const performCurveX = e.currentTarget.value;\n            this.setState(() => {\n              return { performCurveX: performCurveX };\n            });\n            onChangeItem && index !== undefined && onChangeItem({ ...value, performCurveX: performCurveX }, index);\n          }}\n        />\n        <Label>Y</Label>\n        <Input\n          type=\"text\"\n          name=\"performCurveY\"\n          defaultValue={value.performCurveY}\n          onBlur={e => {\n            const performCurveY = e.currentTarget.value;\n            this.setState(() => {\n              return { performCurveY: performCurveY };\n            });\n            onChangeItem && index !== undefined && onChangeItem({ ...value, performCurveY: performCurveY }, index);\n          }}\n        />\n        {onDelete && index !== undefined && (\n          <Tooltip content=\"Delete this performance curve.\" theme={'info'}>\n            <Button\n              variant=\"destructive\"\n              icon=\"trash-alt\"\n              size=\"sm\"\n              onClick={() => {\n                onDelete(index);\n              }}\n            >\n              Remove\n            </Button>\n          </Tooltip>\n        )}\n      </HorizontalGroup>\n    );\n  }\n}\n\nexport class CurveLineForms extends React.PureComponent<PanelOptionsEditorProps<CurvePoints[]>> {\n  onChangeItem = (updatedValue: CurvePoints, index: number) => {\n    let newValues = [...this.props.value];\n    newValues[index] = updatedValue;\n    this.props.onChange(newValues);\n  };\n  onAdd = (newValue: CurvePoints) => {\n    let newValues = [...this.props.value, newValue];\n    this.props.onChange(newValues);\n  };\n  onDelete = (index: number) => {\n    let newValues = [...this.props.value];\n    newValues.splice(index, 1);\n    this.props.onChange(newValues);\n  };\n  render() {\n    const curves = this.props.value;\n    return (\n      <VerticalGroup>\n        <Tooltip content=\"Add a new performance curve.\" theme={'info'}>\n          <Button\n            variant=\"secondary\"\n            size=\"sm\"\n            icon=\"plus\"\n            onClick={() => {\n              this.onAdd({\n                performCurveX: '',\n                performCurveY: '',\n              } as CurvePoints);\n            }}\n          >\n            Add\n          </Button>\n        </Tooltip>\n        {curves.map((curve: CurvePoints, index: number) => {\n          return (\n            <CurveLineForm\n              key={index}\n              value={curve}\n              index={index}\n              onChangeItem={this.onChangeItem}\n              onDelete={this.onDelete}\n              // styles={styles}\n            />\n          );\n        })}\n      </VerticalGroup>\n    );\n  }\n}\n","import React from 'react';\nimport { getColorFromHexRgbOrName } from '@grafana/data';\nimport { PanelOptionsEditorProps } from '@grafana/data';\nimport { Button, ColorPicker, HorizontalGroup, Input, Label, Tooltip, VerticalGroup } from '@grafana/ui';\nimport { PlotSeries } from './types';\n\ninterface PlotSeriesrops {\n  value: PlotSeries;\n  index?: number;\n  styles?: any;\n  onChangeItem?: (a: PlotSeries, b: number) => void | undefined;\n  onDelete?: (a: number) => void;\n}\n\nclass PlotSeriesForm extends React.PureComponent<PlotSeriesrops> {\n  constructor(props: PlotSeriesrops) {\n    super(props);\n    this.state = { ...props.value };\n  }\n  render() {\n    const { value, index, onChangeItem, onDelete } = this.props;\n    return (\n      <HorizontalGroup>\n        <Label>Label</Label>\n        <Input\n          type=\"text\"\n          name=\"label\"\n          defaultValue={value.label}\n          onBlur={e => {\n            const label = e.currentTarget.value;\n            this.setState(() => {\n              return { label: label };\n            });\n            onChangeItem && index !== undefined && onChangeItem({ ...value, label: label }, index);\n          }}\n        />\n        <Label>X</Label>\n        <Input\n          type=\"text\"\n          name=\"xField\"\n          defaultValue={value.xField}\n          onBlur={e => {\n            const xField = e.currentTarget.value;\n            this.setState(() => {\n              return { xField: xField };\n            });\n            onChangeItem && index !== undefined && onChangeItem({ ...value, xField: xField }, index);\n          }}\n        />\n        <Label>Y</Label>\n        <Input\n          type=\"text\"\n          name=\"yField\"\n          defaultValue={value.yField}\n          onBlur={e => {\n            const yField = e.currentTarget.value;\n            this.setState(() => {\n              return { yField: yField };\n            });\n            onChangeItem && index !== undefined && onChangeItem({ ...value, yField: yField }, index);\n          }}\n        />\n        <Label>Color</Label>\n        <ColorPicker\n          color={value.color}\n          onChange={color => {\n            this.setState(() => {\n              return { color: color };\n            });\n            onChangeItem && index !== undefined && onChangeItem({ ...value, color: color }, index);\n          }}\n        ></ColorPicker>\n        {onDelete && index !== undefined && (\n          <Tooltip content=\"Delete this plot.\" theme={'info'}>\n            <Button\n              variant=\"destructive\"\n              icon=\"trash-alt\"\n              size=\"sm\"\n              onClick={() => {\n                onDelete(index);\n              }}\n            >\n              Remove\n            </Button>\n          </Tooltip>\n        )}\n      </HorizontalGroup>\n    );\n  }\n}\n\nexport class PlotSeriesForms extends React.PureComponent<PanelOptionsEditorProps<PlotSeries[]>> {\n  onChangeItem = (updatedValue: PlotSeries, index: number) => {\n    let newValues = [...this.props.value];\n    newValues[index] = updatedValue;\n    this.props.onChange(newValues);\n  };\n  onAdd = (newValue: PlotSeries) => {\n    let newValues = [...this.props.value, newValue];\n    this.props.onChange(newValues);\n  };\n  onDelete = (index: number) => {\n    let newValues = [...this.props.value];\n    newValues.splice(index, 1);\n    this.props.onChange(newValues);\n  };\n  render() {\n    const curves = this.props.value;\n    return (\n      <VerticalGroup>\n        <Tooltip content=\"Add a new plot.\" theme={'info'}>\n          <Button\n            variant=\"secondary\"\n            size=\"sm\"\n            icon=\"plus\"\n            onClick={() => {\n              this.onAdd({\n                xField: '',\n                yField: '',\n                color: getColorFromHexRgbOrName('rgba(136, 136, 136, 0.6)'),\n              } as PlotSeries);\n            }}\n          >\n            Add\n          </Button>\n        </Tooltip>\n        {curves.map((curve: PlotSeries, index: number) => {\n          return (\n            <PlotSeriesForm\n              key={index}\n              value={curve}\n              index={index}\n              onChangeItem={this.onChangeItem}\n              onDelete={this.onDelete}\n            />\n          );\n        })}\n      </VerticalGroup>\n    );\n  }\n}\n","import { PanelPlugin } from '@grafana/data';\nimport { CanvasOptions } from './types';\nimport { PerformanceCurvePanel } from './PerformanceCurvePanel';\nimport { CurveLineForms } from './CurveLineForms';\nimport { PlotSeriesForms } from './PlotSeriesForms';\nimport { getColorFromHexRgbOrName } from '@grafana/data';\n\nexport const plugin = new PanelPlugin<CanvasOptions>(PerformanceCurvePanel).setPanelOptions(builder => {\n  return builder\n    .addTextInput({\n      category: ['Canvas Setting', 'Axis'],\n      path: 'xLabel',\n      name: 'xAxis Label',\n      defaultValue: 'Flowrate',\n    })\n    .addNumberInput({\n      category: ['Canvas Setting', 'Axis'],\n      path: 'xMax',\n      name: 'xAxis Max Value',\n      defaultValue: 1600,\n    })\n    .addTextInput({\n      category: ['Canvas Setting', 'Axis'],\n      path: 'yLabel',\n      name: 'yAxis Label',\n      defaultValue: 'Pressure',\n    })\n    .addNumberInput({\n      category: ['Canvas Setting', 'Axis'],\n      path: 'yMax',\n      name: 'yAxis Max Value',\n      defaultValue: 4000,\n    })\n    .addColorPicker({\n      category: ['Canvas Setting', 'Performance Curve'],\n      path: 'curveColor',\n      name: 'Performance Curve Color',\n      defaultValue: getColorFromHexRgbOrName('rgba(136, 136, 136, 0.6)'),\n      settings: {\n        allowUndefined: true,\n        disableNamedColors: true,\n        textWhenUndefined: 'Not defined',\n      },\n    })\n    .addCustomEditor({\n      category: ['Canvas Setting', 'Performance Curve'],\n      id: 'performanceCurveData',\n      path: 'performanceCurveData',\n      name: 'Performance Curve Data',\n      description: 'Input sample data points of peformance curve . Program automatically draw smooth lines.',\n      defaultValue: [\n        {\n          performCurveX: '200,400,600,800,1000,1200,1400',\n          performCurveY: '4000,3900,3600,3100,2400,1500,400',\n        },\n      ],\n      editor: CurveLineForms,\n    })\n    .addCustomEditor({\n      category: ['Plot Setting'],\n      id: 'plotSetting',\n      path: 'plotSetting',\n      name: 'Plot Setting',\n      description: 'Set field names of X and Y axis to plot operation points. Set alias in query to set field name.',\n      defaultValue: [\n        {\n          xSeries: 'Field X',\n          ySeries: 'Field Y',\n          color: getColorFromHexRgbOrName('rgba(136, 136, 136, 0.6)'),\n        },\n      ],\n      editor: PlotSeriesForms,\n    })\n    .addSelect({\n      category: ['Plot Setting'],\n      path: 'pointRadius',\n      name: 'Point Radius',\n      defaultValue: 2,\n      settings: {\n        options: [\n          {\n            label: '0.5',\n            value: 0.5,\n          },\n          {\n            label: '1',\n            value: 1,\n          },\n          {\n            label: '2',\n            value: 2,\n          },\n          {\n            label: '3',\n            value: 3,\n          },\n          {\n            label: '4',\n            value: 4,\n          },\n          {\n            label: '5',\n            value: 5,\n          },\n          {\n            label: '6',\n            value: 6,\n          },\n          {\n            label: '7',\n            value: 7,\n          },\n          {\n            label: '8',\n            value: 8,\n          },\n          {\n            label: '9',\n            value: 9,\n          },\n          {\n            label: '10',\n            value: 10,\n          },\n        ],\n      },\n    });\n});\n"],"sourceRoot":""}
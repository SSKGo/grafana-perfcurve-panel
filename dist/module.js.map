{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@grafana/ui\"","webpack:///external \"@grafana/data\"","webpack:///external \"d3\"","webpack:///external \"emotion\"","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///./Curves.tsx","webpack:///./PlotCircles.tsx","webpack:///./dataHandler.tsx","webpack:///./PerformanceCurvePanel.tsx","webpack:///./CurveLineForms.tsx","webpack:///./DynamicCurveLineForms.tsx","webpack:///./PlotSeriesForms.tsx","webpack:///./AxisForms.tsx","webpack:///./module.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","__","this","constructor","__assign","assign","arguments","length","apply","__values","iterator","next","done","TypeError","__read","e","ar","push","error","__spread","concat","__makeTemplateObject","cooked","raw","render","fill","stroke","data","curveGenerator","map","dataCurve","index","props","id","ref","node","datum","attr","PureComponent","radius","xAxis","yAxis","xScale","yScale","legend","timeZone","timestamp","x","y","replace","unit","decimals","content","items","placement","displayMode","List","label","theme","String","cx","cy","color","mergeXYField","fieldPlotX","fieldPlotY","timeArrayX","timeField","values","toArray","timeArrayY","valueArrayX","valueField","valueArrayY","timeValueObjectX","timeValueObjectY","timeArrayXY","from","Set","sort","a","timeXYData","getStyles","wrapper","svg","state","onChangeItem","onDelete","type","defaultValue","performCurveX","onBlur","currentTarget","setState","undefined","performCurveY","onChange","variant","icon","size","onClick","updatedValue","newValues","onAdd","newValue","splice","curves","curve","onDeleteItem","xField","yField","fieldGroup","onAddItem","collapsible","item","onChangeGroup","onAddGroup","onDeleteGroup","axis","minValue","Number","maxValue","options","width","height","styles","padding","performanceCurveData","dataCurves","entries","performanceCurveDatum","curveXArray","split","curveYArray","Math","min","pointRadius","seriesName","series","mergedFields","frame","fields","find","field","number","plotSetting","dataPlot","dataLegend","isVisible","dynamicPerfCurve","dataDynamicCurves","j","fieldCurveX","fieldCurveY","k","xPoint","yPoint","xMin","xMax","yMin","yMax","getLabelWithUnit","unitToIndicate","suffix","trim","domain","range","ticks","className","xmlns","xmlnsXlink","viewBox","transform","y1","y2","x1","x2","setPanelOptions","builder","addCustomEditor","category","path","editor","description","addSelect","settings"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import React from 'react';\nimport * as d3 from 'd3';\n\ntype ChartDatum = { x: number; y: number };\n\ninterface CurvesProps {\n  fill: string;\n  stroke: string;\n  'stroke-width': string;\n  index: number;\n  data: ChartDatum[][];\n  curveGenerator: d3.Line<ChartDatum>;\n}\n\nexport class Curves extends React.PureComponent<CurvesProps> {\n  render() {\n    const { fill, stroke, data, curveGenerator } = this.props;\n    return (\n      <g>\n        {data.map((dataCurve, index) => {\n          return (\n            <path\n              fill={fill}\n              stroke={stroke}\n              stroke-width={this.props['stroke-width']}\n              id={'curve-' + this.props.index * 100 + index}\n              ref={node => {\n                return d3\n                  .select(node)\n                  .datum(dataCurve)\n                  .attr('d', curveGenerator);\n              }}\n            />\n          );\n        })}\n      </g>\n    );\n  }\n}\n","import React from 'react';\nimport { Tooltip, GraphLegend, LegendDisplayMode, VerticalGroup } from '@grafana/ui';\nimport { formattedValueToString, getValueFormat, dateTimeFormatISO } from '@grafana/data';\nimport { Axis, TimeXYDatumProps } from './types';\n\ninterface LegendProps {\n  color: string;\n  label: string;\n  isVisible: boolean;\n  yAxis: number;\n}\n\ninterface PlotCirclesProps {\n  data: TimeXYDatumProps[];\n  radius: number;\n  xAxis: Axis;\n  yAxis: Axis;\n  xScale: (a: number) => number;\n  yScale: (a: number) => number;\n  legend: LegendProps;\n  timeZone: string;\n}\n\nexport class PlotCircles extends React.PureComponent<PlotCirclesProps> {\n  render() {\n    const { data, radius, xAxis, yAxis, xScale, yScale, legend, timeZone } = this.props;\n    return (\n      <g>\n        {data.map(datum => {\n          if (datum.timestamp && datum.x && datum.y) {\n            const timestamp = dateTimeFormatISO(datum.timestamp, { timeZone: timeZone })\n              .replace('T', ' ')\n              .replace('+', ' +');\n            const x = formattedValueToString(getValueFormat(xAxis.unit)(datum.x, xAxis.decimals));\n            const y = formattedValueToString(getValueFormat(yAxis.unit)(datum.y, yAxis.decimals));\n            return (\n              <Tooltip\n                content={() => {\n                  return (\n                    <VerticalGroup>\n                      <GraphLegend items={[legend]} placement=\"over\" displayMode={LegendDisplayMode.List}></GraphLegend>\n                      <div>Time: {timestamp}</div>\n                      <div>\n                        {xAxis.label}: {x}\n                      </div>\n                      <div>\n                        {yAxis.label}: {y}\n                      </div>\n                    </VerticalGroup>\n                  );\n                }}\n                theme=\"info\"\n              >\n                <circle r={String(radius)} cx={xScale(datum.x)} cy={yScale(datum.y)} fill={legend.color}></circle>\n              </Tooltip>\n            );\n          } else {\n            return;\n          }\n        })}\n      </g>\n    );\n  }\n}\n","import { MergedFieldsProps, TimeXYDatumProps } from './types';\nimport { getFieldDisplayName } from '@grafana/data';\nimport { FieldType, PanelData } from '@grafana/data';\n\nexport const mergeXYField = (fieldPlotX: MergedFieldsProps, fieldPlotY: MergedFieldsProps): TimeXYDatumProps[] => {\n  // Create array from fields\n  let timeArrayX = fieldPlotX.timeField.values.toArray();\n  let timeArrayY = fieldPlotY.timeField.values.toArray();\n  let valueArrayX = fieldPlotX.valueField.values.toArray();\n  let valueArrayY = fieldPlotY.valueField.values.toArray();\n\n  // Create { timestamp: value } object\n  // X\n  let timeValueObjectX: { [n: number]: number } = {};\n  timeArrayX.map((timestamp, index) => {\n    timeValueObjectX[timestamp] = valueArrayX[index];\n  });\n  // Y\n  let timeValueObjectY: { [n: number]: number } = {};\n  timeArrayY.map((timestamp, index) => {\n    timeValueObjectY[timestamp] = valueArrayY[index];\n  });\n\n  // Create merged timestamp array\n  let timeArrayXY = timeArrayX.concat(timeArrayY);\n  timeArrayXY = Array.from(new Set(timeArrayXY)).sort((a: number, b: number) => a - b);\n\n  // Create data array for plot\n  let timeXYData: TimeXYDatumProps[] = [];\n  timeArrayXY.map((timestamp, index) => {\n    timeXYData[index] = { timestamp: timestamp, x: timeValueObjectX[timestamp], y: timeValueObjectY[timestamp] };\n  });\n  return timeXYData;\n};\n\nexport const createMergedFields = (data: PanelData): MergedFieldsProps[] => {\n  // Create merged fields from series\n  let mergedFields: MergedFieldsProps[] = [];\n  data.series.map(frame => {\n    let timeField = frame.fields.find(field => field.type === FieldType.time);\n    if (frame.name !== undefined) {\n      // time_series\n      let valueField = frame.fields.find(field => field.type === FieldType.number);\n      if (valueField && timeField) {\n        valueField.name = getFieldDisplayName(valueField, frame);\n        mergedFields.push({ name: valueField.name, timeField: timeField, valueField: valueField });\n      }\n    } else {\n      // table\n      frame.fields.map(field => {\n        if (field.type === FieldType.number && timeField) {\n          let valueField = field;\n          mergedFields.push({ name: valueField.name, timeField: timeField, valueField: valueField });\n        }\n      });\n    }\n  });\n  return mergedFields;\n};\n","import React from 'react';\nimport { css, cx } from 'emotion';\nimport * as d3 from 'd3';\nimport { stylesFactory } from '@grafana/ui';\nimport { GraphLegend, LegendDisplayMode, LegendItem } from '@grafana/ui';\nimport { getValueFormat } from '@grafana/data';\nimport { PanelProps } from '@grafana/data';\nimport { CanvasOptions, CurvePoints, MergedFieldsProps, TimeXYDatumProps } from './types';\nimport { Curves } from './Curves';\nimport { PlotCircles } from './PlotCircles';\nimport { createMergedFields, mergeXYField } from './dataHandler';\n\ninterface Props extends PanelProps<CanvasOptions> {}\n\nexport const PerformanceCurvePanel: React.FC<Props> = ({ options, data, width, height, timeZone }) => {\n  const styles = getStyles();\n  const padding = { top: 20, right: 20, bottom: 70, left: 60 };\n\n  type ChartDatum = { x: number; y: number };\n  type CurveData = { color: string; data: ChartDatum[] };\n  type DynamicCurveData = { color: string; data: ChartDatum[][] };\n\n  // Read static performance curve data\n  const performanceCurveData: CurvePoints[] = options.performanceCurveData;\n  let dataCurves: CurveData[] = [];\n  for (const [index, performanceCurveDatum] of performanceCurveData.entries()) {\n    let curveXArray: string[] = performanceCurveDatum.performCurveX.split(',');\n    let curveYArray: string[] = performanceCurveDatum.performCurveY.split(',');\n    dataCurves[index] = { color: performanceCurveDatum.color, data: [] };\n    for (let i = 0; i < Math.min(curveXArray.length, curveYArray.length); i++) {\n      dataCurves[index].data[i] = { x: Number(curveXArray[i]), y: Number(curveYArray[i]) };\n    }\n  }\n\n  // Read point radius\n  const pointRadius: number = options.pointRadius;\n  // Create series name array\n  let seriesName: string[] = [];\n  for (let i = 0; i < data.series.length; i++) {\n    let name = data.series[i].name;\n    if (name) {\n      seriesName[i] = name;\n    } else {\n      seriesName[i] = '';\n    }\n  }\n\n  // Create time-value merged field array from data\n  // mergedFields is used for plotting operation point and drawing dynamic performance curve\n  let mergedFields: MergedFieldsProps[] = createMergedFields(data);\n\n  // Prepare data array for plotting operation point\n  const plotSetting = options.plotSetting;\n  let dataPlot: TimeXYDatumProps[][] = [];\n  let dataLegend: LegendItem[] = [];\n  for (let i = 0; i < plotSetting.length; i++) {\n    let fieldPlotX = mergedFields.find(field => field.name === plotSetting[i].xField);\n    let fieldPlotY = mergedFields.find(field => field.name === plotSetting[i].yField);\n    if (fieldPlotX && fieldPlotY) {\n      // Create time-x-y merged array\n      let timeXYData: TimeXYDatumProps[] = mergeXYField(fieldPlotX, fieldPlotY);\n      dataPlot[i] = timeXYData;\n      // data for legend\n      dataLegend[i] = {\n        color: plotSetting[i].color,\n        label: plotSetting[i].label,\n        isVisible: true,\n        yAxis: 1,\n      };\n    }\n  }\n\n  // Prepare dynamic performance curve data\n  const dynamicPerfCurve = options.dynamicPerfCurve;\n  let dataDynamicCurves: DynamicCurveData[] = [];\n  for (let i = 0; i < dynamicPerfCurve.length; i++) {\n    let fieldGroup = dynamicPerfCurve[i].fieldGroup;\n    dataDynamicCurves[i] = {\n      color: options.dynamicPerfCurve[i].color,\n      data: [],\n    };\n    // j: point(x, y)\n    for (let j = 0; j < fieldGroup.length; j++) {\n      let fieldCurveX = mergedFields.find(field => field.name === fieldGroup[j].xField);\n      let fieldCurveY = mergedFields.find(field => field.name === fieldGroup[j].yField);\n      if (fieldCurveX && fieldCurveY) {\n        // Create time-x-y merged array\n        let timeXYData: TimeXYDatumProps[] = mergeXYField(fieldCurveX, fieldCurveY);\n        // data for curve\n        // i:curve, k: time, j: point(x, y)\n        for (let k = 0; k < timeXYData.length; k++) {\n          if (dataDynamicCurves[i].data[k] === undefined) {\n            dataDynamicCurves[i].data[k] = [];\n          }\n          let xPoint = timeXYData[k].x;\n          let yPoint = timeXYData[k].y;\n          if (xPoint && yPoint) {\n            dataDynamicCurves[i].data[k][j] = { x: xPoint, y: yPoint };\n          }\n        }\n      }\n    }\n  }\n\n  // Read X-axis and Y-Axis settings\n  const xMin = options.xAxis.minValue;\n  const xMax = options.xAxis.maxValue;\n  const yMin = options.yAxis.minValue;\n  const yMax = options.yAxis.maxValue;\n\n  // Function to add unit to axis label\n  const getLabelWithUnit = (label: string, unit: string | undefined) => {\n    const unitToIndicate = getValueFormat(unit)(0).suffix;\n    if (unitToIndicate) {\n      return label + ` [${unitToIndicate?.trim()}]`;\n    } else {\n      return label;\n    }\n  };\n\n  // Scale\n  const xScale = d3\n    .scaleLinear()\n    .domain([xMin, xMax || 0.0])\n    .range([padding.left, width - padding.right]);\n  const yScale = d3\n    .scaleLinear()\n    .domain([yMin, yMax || 0.0])\n    .range([height - padding.bottom, padding.top]);\n  // Create axis\n  const xAxis = d3.axisBottom(xScale).ticks(width / 80);\n  const yAxis = d3.axisLeft(yScale).ticks(height / 80);\n\n  // Draw performance curve\n  const curveGenerator = d3\n    .line<ChartDatum>()\n    .curve(d3.curveBasis)\n    .x((d: ChartDatum) => xScale(d.x))\n    .y((d: ChartDatum) => yScale(d.y));\n\n  return (\n    <div\n      className={cx(\n        styles.wrapper,\n        css`\n          width: ${width}px;\n          height: ${height}px;\n        `\n      )}\n    >\n      <svg\n        className={styles.svg}\n        width={width}\n        height={height}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        viewBox={`0 0 ${width} ${height}`}\n      >\n        {/* xAxis */}\n        <g\n          transform={`translate(0, ${height - padding.bottom})`}\n          ref={node => {\n            d3.select(node).call(xAxis as any);\n          }}\n        >\n          <text\n            x={(width - padding.left - padding.right) / 2 + padding.left}\n            y=\"40\"\n            text-anchor=\"middle\"\n            fill=\"currentColor\"\n            font-size=\"8pt\"\n          >\n            {getLabelWithUnit(options.xAxis.label, options.xAxis.unit)}\n          </text>\n        </g>\n        {/* yAxis */}\n        <g\n          transform={`translate(${padding.left}, 0)`}\n          ref={node => {\n            d3.select(node).call(yAxis as any);\n          }}\n        >\n          <text\n            x={-(height - padding.top - padding.bottom) / 2}\n            y=\"-50\"\n            text-anchor=\"middle\"\n            fill=\"currentColor\"\n            transform=\"rotate(-90)\"\n            font-size=\"8pt\"\n          >\n            {getLabelWithUnit(options.yAxis.label, options.yAxis.unit)}\n          </text>\n        </g>\n        {/* Grid Vertical Lines */}\n        <g>\n          {xScale.ticks().map((d: number) => {\n            return (\n              <line\n                stroke=\"currentColor\"\n                stroke-opacity=\"0.1\"\n                y1={padding.top}\n                y2={height - padding.bottom}\n                x1={0.5 + xScale(d)}\n                x2={0.5 + xScale(d)}\n              ></line>\n            );\n          })}\n        </g>\n        {/* Grid Horizontal Lines */}\n        <g>\n          {yScale.ticks().map((d: number) => {\n            return (\n              <line\n                stroke=\"currentColor\"\n                stroke-opacity=\"0.1\"\n                x1={padding.left}\n                x2={width - padding.right}\n                y1={0.5 + yScale(d)}\n                y2={0.5 + yScale(d)}\n              ></line>\n            );\n          })}\n        </g>\n        {/* Static Curve */}\n        {dataCurves.map((dataCurve, index) => {\n          return (\n            <g id=\"static-curve-group\">\n              <path\n                fill=\"none\"\n                stroke={dataCurve.color}\n                stroke-width=\"1.5\"\n                id={'curve-' + index}\n                ref={node => {\n                  d3.select(node)\n                    .datum(dataCurve.data)\n                    .attr('d', curveGenerator);\n                }}\n              />\n            </g>\n          );\n        })}\n        {dataDynamicCurves.map((dataCurve, index) => {\n          return (\n            <g id=\"dynamic-curve-group\">\n              <Curves\n                fill=\"none\"\n                stroke={dataCurve.color}\n                stroke-width=\"1.5\"\n                index={index}\n                data={dataCurve.data}\n                curveGenerator={curveGenerator}\n              ></Curves>\n            </g>\n          );\n        })}\n        {/* Plot */}\n        <g id=\"plot-group\">\n          {dataPlot.map((data, i) => {\n            return (\n              <PlotCircles\n                data={data}\n                radius={pointRadius}\n                xAxis={options.xAxis}\n                yAxis={options.yAxis}\n                xScale={xScale}\n                yScale={yScale}\n                legend={dataLegend[i]}\n                timeZone={timeZone}\n              ></PlotCircles>\n            );\n          })}\n        </g>\n      </svg>\n      <div className={styles.legend}>\n        <GraphLegend items={dataLegend} displayMode={LegendDisplayMode.List} placement=\"under\"></GraphLegend>\n      </div>\n    </div>\n  );\n};\n\nconst getStyles = stylesFactory(() => {\n  return {\n    wrapper: css`\n      position: relative;\n    `,\n    svg: css`\n      position: absolute;\n      top: 0;\n      left: 0;\n    `,\n    legend: css`\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      padding: 10px;\n    `,\n  };\n});\n","import React from 'react';\nimport { PanelOptionsEditorProps } from '@grafana/data';\nimport { getColorFromHexRgbOrName } from '@grafana/data';\nimport { Button, ColorPicker, Tooltip, Input, HorizontalGroup, Label, VerticalGroup } from '@grafana/ui';\nimport { CurvePoints } from './types';\n\ninterface CurveLineFormProps {\n  value: CurvePoints;\n  index?: number;\n  styles?: any;\n  onChangeItem?: (a: CurvePoints, b: number) => void | undefined;\n  onDelete?: (a: number) => void;\n}\n\nclass CurveLineForm extends React.PureComponent<CurveLineFormProps> {\n  constructor(props: CurveLineFormProps) {\n    super(props);\n    this.state = { ...props.value };\n  }\n  render() {\n    const { value, index, onChangeItem, onDelete } = this.props;\n    return (\n      <HorizontalGroup>\n        <Label>X</Label>\n        <Input\n          type=\"text\"\n          name=\"performCurveX\"\n          defaultValue={value.performCurveX}\n          onBlur={e => {\n            const performCurveX = e.currentTarget.value;\n            this.setState(() => {\n              return { performCurveX: performCurveX };\n            });\n            onChangeItem && index !== undefined && onChangeItem({ ...value, performCurveX: performCurveX }, index);\n          }}\n        />\n        <Label>Y</Label>\n        <Input\n          type=\"text\"\n          name=\"performCurveY\"\n          defaultValue={value.performCurveY}\n          onBlur={e => {\n            const performCurveY = e.currentTarget.value;\n            this.setState(() => {\n              return { performCurveY: performCurveY };\n            });\n            onChangeItem && index !== undefined && onChangeItem({ ...value, performCurveY: performCurveY }, index);\n          }}\n        />\n        <Label>Color</Label>\n        <ColorPicker\n          color={value.color}\n          onChange={color => {\n            this.setState(() => {\n              return { color: color };\n            });\n            onChangeItem && index !== undefined && onChangeItem({ ...value, color: color }, index);\n          }}\n        ></ColorPicker>\n        {onDelete && index !== undefined && (\n          <Tooltip content=\"Delete this performance curve.\" theme={'info'}>\n            <Button\n              variant=\"destructive\"\n              icon=\"trash-alt\"\n              size=\"sm\"\n              onClick={() => {\n                onDelete(index);\n              }}\n            >\n              Remove\n            </Button>\n          </Tooltip>\n        )}\n      </HorizontalGroup>\n    );\n  }\n}\n\nexport class CurveLineForms extends React.PureComponent<PanelOptionsEditorProps<CurvePoints[]>> {\n  onChangeItem = (updatedValue: CurvePoints, index: number) => {\n    let newValues = [...this.props.value];\n    newValues[index] = updatedValue;\n    this.props.onChange(newValues);\n  };\n  onAdd = (newValue: CurvePoints) => {\n    let newValues = [...this.props.value, newValue];\n    this.props.onChange(newValues);\n  };\n  onDelete = (index: number) => {\n    let newValues = [...this.props.value];\n    newValues.splice(index, 1);\n    this.props.onChange(newValues);\n  };\n  render() {\n    const curves = this.props.value;\n    return (\n      <VerticalGroup>\n        <Tooltip content=\"Add a new performance curve.\" theme={'info'}>\n          <Button\n            variant=\"secondary\"\n            size=\"sm\"\n            icon=\"plus\"\n            onClick={() => {\n              this.onAdd({\n                performCurveX: '',\n                performCurveY: '',\n                color: getColorFromHexRgbOrName('rgba(136, 136, 136, 0.6)'),\n              } as CurvePoints);\n            }}\n          >\n            Add\n          </Button>\n        </Tooltip>\n        {curves.map((curve: CurvePoints, index: number) => {\n          return (\n            <CurveLineForm\n              key={index}\n              value={curve}\n              index={index}\n              onChangeItem={this.onChangeItem}\n              onDelete={this.onDelete}\n              // styles={styles}\n            />\n          );\n        })}\n      </VerticalGroup>\n    );\n  }\n}\n","import React from 'react';\nimport { getColorFromHexRgbOrName } from '@grafana/data';\nimport { PanelOptionsEditorProps } from '@grafana/data';\nimport { Button, ControlledCollapse, ColorPicker, HorizontalGroup, Input, Label, VerticalGroup } from '@grafana/ui';\nimport { CurveGroup, CurveItem } from './types';\n\ninterface CurveItemFormProps {\n  value: CurveItem;\n  index: number;\n  onChangeItem: (a: CurveItem, b: number) => void | undefined;\n  onDeleteItem: (a: number) => void;\n}\n\nclass CurveItemForm extends React.PureComponent<CurveItemFormProps> {\n  constructor(props: CurveItemFormProps) {\n    super(props);\n    this.state = { ...props.value };\n  }\n  render() {\n    const { value, index, onChangeItem, onDeleteItem } = this.props;\n    return (\n      <HorizontalGroup>\n        <Label>X</Label>\n        <Input\n          type=\"text\"\n          name=\"xField\"\n          defaultValue={value.xField}\n          onBlur={e => {\n            const xField = e.currentTarget.value;\n            this.setState(() => {\n              return { xField: xField };\n            });\n            onChangeItem({ ...value, xField: xField }, index);\n          }}\n        />\n        <Label>Y</Label>\n        <Input\n          type=\"text\"\n          name=\"yField\"\n          defaultValue={value.yField}\n          onBlur={e => {\n            const yField = e.currentTarget.value;\n            this.setState(() => {\n              return { yField: yField };\n            });\n            onChangeItem({ ...value, yField: yField }, index);\n          }}\n        />\n        <Button\n          variant=\"destructive\"\n          icon=\"trash-alt\"\n          size=\"sm\"\n          onClick={() => {\n            onDeleteItem(index);\n          }}\n        >\n          Remove\n        </Button>\n      </HorizontalGroup>\n    );\n  }\n}\n\ninterface CurveGroupFormProps {\n  value: CurveGroup;\n  index: number;\n  onChange: (a: CurveGroup, b: number) => void | undefined;\n  onDelete: (a: number) => void;\n}\n\nclass CurveGroupForm extends React.PureComponent<CurveGroupFormProps> {\n  constructor(props: CurveGroupFormProps) {\n    super(props);\n    this.state = { ...props.value };\n  }\n\n  onChangeItem = (updatedValue: CurveItem, index: number) => {\n    let newValues = [...this.props.value.fieldGroup];\n    newValues[index] = updatedValue;\n    this.props.onChange({ fieldGroup: newValues, color: this.props.value.color }, this.props.index);\n  };\n  onAddItem = (newValue: CurveItem) => {\n    let newValues = [...this.props.value.fieldGroup, newValue];\n    this.props.onChange({ fieldGroup: newValues, color: this.props.value.color }, this.props.index);\n  };\n  onDeleteItem = (index: number) => {\n    let newValues = [...this.props.value.fieldGroup];\n    newValues.splice(index, 1);\n    this.props.onChange({ fieldGroup: newValues, color: this.props.value.color }, this.props.index);\n  };\n  render() {\n    const { value, index, onChange, onDelete } = this.props;\n    return (\n      <ControlledCollapse collapsible label={`Line Group ${index}`}>\n        <VerticalGroup>\n          <HorizontalGroup>\n            <Button\n              variant=\"destructive\"\n              icon=\"trash-alt\"\n              size=\"sm\"\n              onClick={() => {\n                onDelete(index);\n              }}\n            >\n              Remove Line Group\n            </Button>\n          </HorizontalGroup>\n          <HorizontalGroup>\n            <Button\n              variant=\"secondary\"\n              size=\"sm\"\n              icon=\"plus\"\n              onClick={() => {\n                this.onAddItem({\n                  xField: '',\n                  yField: '',\n                } as CurveItem);\n              }}\n            >\n              Add Field\n            </Button>\n\n            <Label>Color</Label>\n            <ColorPicker\n              color={value.color}\n              onChange={color => {\n                this.setState(() => {\n                  return { color: color };\n                });\n                onChange({ ...value, color: color }, index);\n              }}\n            ></ColorPicker>\n          </HorizontalGroup>\n          {value.fieldGroup.map((item: CurveItem, index: number) => {\n            return (\n              <CurveItemForm\n                key={index}\n                value={item}\n                index={index}\n                onChangeItem={this.onChangeItem}\n                onDeleteItem={this.onDeleteItem}\n              />\n            );\n          })}\n        </VerticalGroup>\n      </ControlledCollapse>\n    );\n  }\n}\n\nexport class DynamicCurveLineForms extends React.PureComponent<PanelOptionsEditorProps<CurveGroup[]>> {\n  onChangeGroup = (updatedValue: CurveGroup, index: number) => {\n    let newValues = [...this.props.value];\n    newValues[index] = updatedValue;\n    this.props.onChange(newValues);\n  };\n  onAddGroup = (newValue: CurveGroup) => {\n    let newValues = [...this.props.value, newValue];\n    this.props.onChange(newValues);\n  };\n  onDeleteGroup = (index: number) => {\n    let newValues = [...this.props.value];\n    newValues.splice(index, 1);\n    this.props.onChange(newValues);\n  };\n  render() {\n    const curves = this.props.value;\n    return (\n      <VerticalGroup>\n        <Button\n          variant=\"secondary\"\n          size=\"sm\"\n          icon=\"plus\"\n          onClick={() => {\n            this.onAddGroup({\n              fieldGroup: [{ xField: '', yField: '' }],\n              color: getColorFromHexRgbOrName('rgba(136, 136, 136, 0.6)'),\n            } as CurveGroup);\n          }}\n        >\n          Add\n        </Button>\n        {curves.map((curve: CurveGroup, index: number) => {\n          return (\n            <CurveGroupForm\n              key={index}\n              value={curve}\n              index={index}\n              onChange={this.onChangeGroup}\n              onDelete={this.onDeleteGroup}\n            />\n          );\n        })}\n      </VerticalGroup>\n    );\n  }\n}\n","import React from 'react';\nimport { getColorFromHexRgbOrName } from '@grafana/data';\nimport { PanelOptionsEditorProps } from '@grafana/data';\nimport { Button, ColorPicker, HorizontalGroup, Input, Label, Tooltip, VerticalGroup } from '@grafana/ui';\nimport { PlotSeries } from './types';\n\ninterface PlotSeriesrops {\n  value: PlotSeries;\n  index?: number;\n  styles?: any;\n  onChangeItem?: (a: PlotSeries, b: number) => void | undefined;\n  onDelete?: (a: number) => void;\n}\n\nclass PlotSeriesForm extends React.PureComponent<PlotSeriesrops> {\n  constructor(props: PlotSeriesrops) {\n    super(props);\n    this.state = { ...props.value };\n  }\n  render() {\n    const { value, index, onChangeItem, onDelete } = this.props;\n    return (\n      <HorizontalGroup>\n        <Label>Label</Label>\n        <Input\n          type=\"text\"\n          name=\"label\"\n          defaultValue={value.label}\n          onBlur={e => {\n            const label = e.currentTarget.value;\n            this.setState(() => {\n              return { label: label };\n            });\n            onChangeItem && index !== undefined && onChangeItem({ ...value, label: label }, index);\n          }}\n        />\n        <Label>X</Label>\n        <Input\n          type=\"text\"\n          name=\"xField\"\n          defaultValue={value.xField}\n          onBlur={e => {\n            const xField = e.currentTarget.value;\n            this.setState(() => {\n              return { xField: xField };\n            });\n            onChangeItem && index !== undefined && onChangeItem({ ...value, xField: xField }, index);\n          }}\n        />\n        <Label>Y</Label>\n        <Input\n          type=\"text\"\n          name=\"yField\"\n          defaultValue={value.yField}\n          onBlur={e => {\n            const yField = e.currentTarget.value;\n            this.setState(() => {\n              return { yField: yField };\n            });\n            onChangeItem && index !== undefined && onChangeItem({ ...value, yField: yField }, index);\n          }}\n        />\n        <Label>Color</Label>\n        <ColorPicker\n          color={value.color}\n          onChange={color => {\n            this.setState(() => {\n              return { color: color };\n            });\n            onChangeItem && index !== undefined && onChangeItem({ ...value, color: color }, index);\n          }}\n        ></ColorPicker>\n        {onDelete && index !== undefined && (\n          <Tooltip content=\"Delete this plot.\" theme={'info'}>\n            <Button\n              variant=\"destructive\"\n              icon=\"trash-alt\"\n              size=\"sm\"\n              onClick={() => {\n                onDelete(index);\n              }}\n            >\n              Remove\n            </Button>\n          </Tooltip>\n        )}\n      </HorizontalGroup>\n    );\n  }\n}\n\nexport class PlotSeriesForms extends React.PureComponent<PanelOptionsEditorProps<PlotSeries[]>> {\n  onChangeItem = (updatedValue: PlotSeries, index: number) => {\n    let newValues = [...this.props.value];\n    newValues[index] = updatedValue;\n    this.props.onChange(newValues);\n  };\n  onAdd = (newValue: PlotSeries) => {\n    let newValues = [...this.props.value, newValue];\n    this.props.onChange(newValues);\n  };\n  onDelete = (index: number) => {\n    let newValues = [...this.props.value];\n    newValues.splice(index, 1);\n    this.props.onChange(newValues);\n  };\n  render() {\n    const curves = this.props.value;\n    return (\n      <VerticalGroup>\n        <Tooltip content=\"Add a new plot.\" theme={'info'}>\n          <Button\n            variant=\"secondary\"\n            size=\"sm\"\n            icon=\"plus\"\n            onClick={() => {\n              this.onAdd({\n                label: '',\n                xField: '',\n                yField: '',\n                color: getColorFromHexRgbOrName('rgba(136, 136, 136, 0.6)'),\n              } as PlotSeries);\n            }}\n          >\n            Add\n          </Button>\n        </Tooltip>\n        {curves.map((curve: PlotSeries, index: number) => {\n          return (\n            <PlotSeriesForm\n              key={index}\n              value={curve}\n              index={index}\n              onChangeItem={this.onChangeItem}\n              onDelete={this.onDelete}\n            />\n          );\n        })}\n      </VerticalGroup>\n    );\n  }\n}\n","import React from 'react';\nimport { PanelOptionsEditorProps } from '@grafana/data';\nimport { Input, HorizontalGroup, Label, UnitPicker, VerticalGroup } from '@grafana/ui';\nimport { Axis } from './types';\n\nexport class AxisForms extends React.PureComponent<PanelOptionsEditorProps<Axis>> {\n  render() {\n    const axis = this.props.value;\n    return (\n      <VerticalGroup>\n        <HorizontalGroup>\n          <Label>Min</Label>\n          <Input\n            type=\"number\"\n            name=\"minValue\"\n            value={axis.minValue}\n            onChange={e => {\n              const minValue = e.currentTarget.value;\n              this.setState(() => {\n                return { minValue: Number(minValue) };\n              });\n              this.props.onChange({ ...this.props.value, minValue: Number(minValue) });\n            }}\n          />\n          <Label>Max</Label>\n          <Input\n            type=\"number\"\n            name=\"maxValue\"\n            defaultValue={axis.maxValue}\n            onChange={e => {\n              const maxValue = e.currentTarget.value;\n              this.setState(() => {\n                return { maxValue: Number(maxValue) };\n              });\n              this.props.onChange({ ...this.props.value, maxValue: Number(maxValue) });\n            }}\n          />\n          <Label>Label</Label>\n          <Input\n            type=\"text\"\n            name=\"label\"\n            defaultValue={axis.label}\n            onChange={e => {\n              const label = e.currentTarget.value;\n              this.props.onChange({ ...this.props.value, label: label });\n              this.setState(() => {\n                return { label: label };\n              });\n            }}\n          />\n        </HorizontalGroup>\n        <HorizontalGroup>\n          <Label>Unit</Label>\n          <UnitPicker\n            value={axis.unit}\n            onChange={unit => {\n              this.props.onChange({ ...this.props.value, unit: unit });\n              this.setState(() => {\n                return { unit: unit };\n              });\n            }}\n          />\n          <Label>Decimals</Label>\n          <Input\n            type=\"number\"\n            name=\"decimals\"\n            defaultValue={axis.decimals}\n            onChange={e => {\n              const decimals = e.currentTarget.value;\n              this.props.onChange({ ...this.props.value, decimals: Number(decimals) });\n              this.setState(() => {\n                return { decimals: decimals };\n              });\n            }}\n          />\n        </HorizontalGroup>\n      </VerticalGroup>\n    );\n  }\n}\n","import { PanelPlugin } from '@grafana/data';\nimport { CanvasOptions } from './types';\nimport { PerformanceCurvePanel } from './PerformanceCurvePanel';\nimport { CurveLineForms } from './CurveLineForms';\nimport { DynamicCurveLineForms } from './DynamicCurveLineForms';\nimport { PlotSeriesForms } from './PlotSeriesForms';\nimport { AxisForms } from './AxisForms';\nimport { getColorFromHexRgbOrName } from '@grafana/data';\n\nexport const plugin = new PanelPlugin<CanvasOptions>(PerformanceCurvePanel).setPanelOptions(builder => {\n  return builder\n    .addCustomEditor({\n      category: ['Canvas Setting', 'Axis'],\n      id: 'xAxis',\n      path: 'xAxis',\n      name: 'X-Axis Setting',\n      defaultValue: {\n        minValue: 0,\n        maxValue: 60,\n        label: 'Flowrate',\n        unit: undefined,\n        decimals: undefined,\n      },\n      editor: AxisForms,\n    })\n    .addCustomEditor({\n      category: ['Canvas Setting', 'Axis'],\n      id: 'yAxis',\n      path: 'yAxis',\n      name: 'Y-Axis Setting',\n      defaultValue: {\n        minValue: 0,\n        maxValue: 100,\n        label: 'Pressure',\n        unit: undefined,\n        decimals: undefined,\n      },\n      editor: AxisForms,\n    })\n    .addCustomEditor({\n      category: ['Canvas Setting', 'Performance Curve'],\n      id: 'performanceCurveData',\n      path: 'performanceCurveData',\n      name: 'Static Performance Curve Data',\n      description: 'Input sample data points of peformance curve. Program automatically draw smooth lines.',\n      defaultValue: [\n        {\n          performCurveX: '10,20,30,40,50',\n          performCurveY: '80,78,72,62,48',\n          color: getColorFromHexRgbOrName('rgba(136, 136, 136, 0.6)'),\n        },\n      ],\n      editor: CurveLineForms,\n    })\n    .addCustomEditor({\n      category: ['Canvas Setting', 'Performance Curve'],\n      id: 'dynamicPerfCurve',\n      path: 'dynamicPerfCurve',\n      name: 'Dynamic Performance Curve Data',\n      description: 'Set filed names to draw dynamic peformance curve. Program automatically draw smooth lines.',\n      defaultValue: [],\n      editor: DynamicCurveLineForms,\n    })\n\n    .addCustomEditor({\n      category: ['Plot Setting'],\n      id: 'plotSetting',\n      path: 'plotSetting',\n      name: 'Plot Setting',\n      description: 'Set field names of X and Y axis to plot operation points. Set alias in query to set field name.',\n      defaultValue: [\n        {\n          label: 'Label Name',\n          xField: 'Field X',\n          yField: 'Field Y',\n          color: getColorFromHexRgbOrName('rgba(136, 136, 136, 0.6)'),\n        },\n      ],\n      editor: PlotSeriesForms,\n    })\n    .addSelect({\n      category: ['Plot Setting'],\n      path: 'pointRadius',\n      name: 'Point Radius',\n      defaultValue: 2,\n      settings: {\n        options: [\n          {\n            label: '0.5',\n            value: 0.5,\n          },\n          {\n            label: '1',\n            value: 1,\n          },\n          {\n            label: '2',\n            value: 2,\n          },\n          {\n            label: '3',\n            value: 3,\n          },\n          {\n            label: '4',\n            value: 4,\n          },\n          {\n            label: '5',\n            value: 5,\n          },\n          {\n            label: '6',\n            value: 6,\n          },\n          {\n            label: '7',\n            value: 7,\n          },\n          {\n            label: '8',\n            value: 8,\n          },\n          {\n            label: '9',\n            value: 9,\n          },\n          {\n            label: '10',\n            value: 10,\n          },\n        ],\n      },\n    });\n});\n"],"sourceRoot":""}
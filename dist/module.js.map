{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@grafana/ui\"","webpack:///external \"@grafana/data\"","webpack:///external \"d3\"","webpack:///external \"emotion\"","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///./Curves.tsx","webpack:///./PlotCircles.tsx","webpack:///./dataHandler.tsx","webpack:///./PerformanceCurvePanel.tsx","webpack:///./CurveLineForms.tsx","webpack:///./DynamicCurveLineForms.tsx","webpack:///./PlotSeriesForms.tsx","webpack:///./AxisForms.tsx","webpack:///./module.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","TypeError","String","__","this","constructor","__assign","assign","arguments","length","apply","__values","iterator","next","done","__read","e","ar","push","error","__spreadArray","to","from","pack","slice","concat","__makeTemplateObject","cooked","raw","render","props","fill","stroke","data","curveGenerator","map","dataCurve","index","strokeWidth","id","ref","node","datum","attr","toString","PureComponent","radius","xAxis","yAxis","xScale","yScale","legend","timeZone","timestamp","x","y","replace","unit","decimals","content","items","placement","displayMode","List","label","theme","cx","cy","color","mergeXYField","fieldPlotX","fieldPlotY","timeArrayX","timeField","values","toArray","timeArrayY","valueArrayX","valueField","valueArrayY","timeValueObjectX","timeValueObjectY","timeArrayXY","Set","sort","a","timeXYData","wrapper","svg","state","onChangeItem","onDelete","css","type","defaultValue","performCurveX","onBlur","currentTarget","setState","undefined","performCurveY","onChange","variant","icon","size","onClick","updatedValue","newValues","onAdd","newValue","splice","curves","curve","onDeleteItem","xField","yField","fieldGroup","onAddItem","collapsible","item","onChangeGroup","onAddGroup","onDeleteGroup","axis","minValue","Number","maxValue","options","width","height","styles","padding","performanceCurveData","dataCurves","entries","performanceCurveDatum","curveXArray","split","curveYArray","Math","min","pointRadius","seriesName","series","mergedFields","frame","fields","find","field","number","plotSetting","dataPlot","dataLegend","disabled","dynamicPerfCurve","dataDynamicCurves","j","fieldCurveX","fieldCurveY","k","xPoint","yPoint","xMin","xMax","yMin","yMax","getLabelWithUnit","unitToIndicate","suffix","trim","domain","range","ticks","className","xmlns","xmlnsXlink","viewBox","transform","textAnchor","fontSize","strokeOpacity","y1","y2","x1","x2","setPanelOptions","builder","addCustomEditor","category","path","editor","description","addSelect","settings"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import React from 'react';\nimport * as d3 from 'd3';\n\ntype ChartDatum = { x: number; y: number };\n\ninterface CurvesProps {\n  fill: string;\n  stroke: string;\n  'stroke-width': string;\n  index: number;\n  data: ChartDatum[][];\n  curveGenerator: d3.Line<ChartDatum>;\n}\n\nexport class Curves extends React.PureComponent<CurvesProps> {\n  render() {\n    const { fill, stroke, data, curveGenerator } = this.props;\n    return (\n      <g>\n        {data.map((dataCurve, index) => {\n          return (\n            <path\n              fill={fill}\n              stroke={stroke}\n              strokeWidth={this.props['stroke-width']}\n              id={'curve-' + this.props.index * 100 + index}\n              ref={(node) => {\n                return d3.select(node).datum(dataCurve).attr('d', curveGenerator);\n              }}\n              key={'curve' + index.toString()}\n            />\n          );\n        })}\n      </g>\n    );\n  }\n}\n","import React from 'react';\nimport { Tooltip, VizLegend, LegendDisplayMode, VerticalGroup, VizLegendItem } from '@grafana/ui';\nimport { formattedValueToString, getValueFormat, dateTimeFormatISO } from '@grafana/data';\nimport { Axis, TimeXYDatumProps } from './types';\n\ninterface PlotCirclesProps {\n  data: TimeXYDatumProps[];\n  radius: number;\n  xAxis: Axis;\n  yAxis: Axis;\n  xScale: d3.ScaleLinear<number, number>;\n  yScale: d3.ScaleLinear<number, number>;\n  legend: VizLegendItem;\n  timeZone: string;\n}\n\nexport class PlotCircles extends React.PureComponent<PlotCirclesProps> {\n  render() {\n    const { data, radius, xAxis, yAxis, xScale, yScale, legend, timeZone } = this.props;\n    return (\n      <g>\n        {data.map((datum) => {\n          if (datum.timestamp !== null && datum.x !== null && datum.y !== null) {\n            const timestamp = dateTimeFormatISO(datum.timestamp, { timeZone: timeZone })\n              .replace('T', ' ')\n              .replace('+', ' +');\n            const xFormarted = formattedValueToString(getValueFormat(xAxis.unit)(datum.x, xAxis.decimals));\n            const yFormarted = formattedValueToString(getValueFormat(yAxis.unit)(datum.y, yAxis.decimals));\n            return (\n              <Tooltip\n                content={() => {\n                  return (\n                    <VerticalGroup>\n                      <VizLegend items={[legend]} placement=\"bottom\" displayMode={LegendDisplayMode.List} />\n                      <div>Time: {timestamp}</div>\n                      <div>\n                        {xAxis.label}: {xFormarted}\n                      </div>\n                      <div>\n                        {yAxis.label}: {yFormarted}\n                      </div>\n                    </VerticalGroup>\n                  );\n                }}\n                theme=\"info\"\n              >\n                <circle r={String(radius)} cx={xScale(datum.x)} cy={yScale(datum.y)} fill={legend.color}></circle>\n              </Tooltip>\n            );\n          } else {\n            return;\n          }\n        })}\n      </g>\n    );\n  }\n}\n","import { MergedFieldsProps, TimeXYDatumProps } from './types';\nimport { FieldType, PanelData, getFieldDisplayName } from '@grafana/data';\n\nexport const mergeXYField = (fieldPlotX: MergedFieldsProps, fieldPlotY: MergedFieldsProps): TimeXYDatumProps[] => {\n  // Create array from fields\n  let timeArrayX = fieldPlotX.timeField.values.toArray();\n  let timeArrayY = fieldPlotY.timeField.values.toArray();\n  let valueArrayX = fieldPlotX.valueField.values.toArray();\n  let valueArrayY = fieldPlotY.valueField.values.toArray();\n\n  // Create { timestamp: value } object\n  // X\n  let timeValueObjectX: { [n: number]: number } = {};\n  timeArrayX.map((timestamp, index) => {\n    timeValueObjectX[timestamp] = valueArrayX[index];\n  });\n  // Y\n  let timeValueObjectY: { [n: number]: number } = {};\n  timeArrayY.map((timestamp, index) => {\n    timeValueObjectY[timestamp] = valueArrayY[index];\n  });\n\n  // Create merged timestamp array\n  let timeArrayXY = timeArrayX.concat(timeArrayY);\n  timeArrayXY = Array.from(new Set(timeArrayXY)).sort((a: number, b: number) => a - b);\n\n  // Create data array for plot\n  let timeXYData: TimeXYDatumProps[] = [];\n  timeArrayXY.map((timestamp, index) => {\n    timeXYData[index] = { timestamp: timestamp, x: timeValueObjectX[timestamp], y: timeValueObjectY[timestamp] };\n  });\n  return timeXYData;\n};\n\nexport const createMergedFields = (data: PanelData): MergedFieldsProps[] => {\n  // Create merged fields from series\n  let mergedFields: MergedFieldsProps[] = [];\n  data.series.map((frame) => {\n    let timeField = frame.fields.find((field) => field.type === FieldType.time);\n    if (frame.name !== undefined) {\n      // time_series\n      let valueField = frame.fields.find((field) => field.type === FieldType.number);\n      if (valueField && timeField) {\n        valueField.name = getFieldDisplayName(valueField, frame);\n        mergedFields.push({ name: valueField.name, timeField: timeField, valueField: valueField });\n      }\n    } else {\n      // table\n      frame.fields.map((field) => {\n        if (field.type === FieldType.number && timeField) {\n          let valueField = field;\n          mergedFields.push({ name: valueField.name, timeField: timeField, valueField: valueField });\n        }\n      });\n    }\n  });\n  return mergedFields;\n};\n","import React from 'react';\nimport { css, cx } from 'emotion';\nimport * as d3 from 'd3';\nimport { VizLegend, LegendDisplayMode, VizLegendItem } from '@grafana/ui';\nimport { getValueFormat, PanelProps } from '@grafana/data';\nimport { CanvasOptions, CurvePoints, MergedFieldsProps, TimeXYDatumProps } from './types';\nimport { Curves } from './Curves';\nimport { PlotCircles } from './PlotCircles';\nimport { createMergedFields, mergeXYField } from './dataHandler';\n\ninterface Props extends PanelProps<CanvasOptions> {}\n\nexport const PerformanceCurvePanel: React.FC<Props> = ({ options, data, width, height, timeZone }) => {\n  const styles = getStyles();\n  const padding = { top: 20, right: 20, bottom: 70, left: 60 };\n\n  type ChartDatum = { x: number; y: number };\n  type CurveData = { color: string; data: ChartDatum[] };\n  type DynamicCurveData = { color: string; data: ChartDatum[][] };\n\n  // Read static performance curve data\n  const performanceCurveData: CurvePoints[] = options.performanceCurveData;\n  let dataCurves: CurveData[] = [];\n  for (const [index, performanceCurveDatum] of performanceCurveData.entries()) {\n    let curveXArray: string[] = performanceCurveDatum.performCurveX.split(',');\n    let curveYArray: string[] = performanceCurveDatum.performCurveY.split(',');\n    dataCurves[index] = { color: performanceCurveDatum.color, data: [] };\n    for (let i = 0; i < Math.min(curveXArray.length, curveYArray.length); i++) {\n      dataCurves[index].data[i] = { x: Number(curveXArray[i]), y: Number(curveYArray[i]) };\n    }\n  }\n\n  // Read point radius\n  const pointRadius: number = options.pointRadius;\n  // Create series name array\n  let seriesName: string[] = [];\n  for (let i = 0; i < data.series.length; i++) {\n    let name = data.series[i].name;\n    if (name) {\n      seriesName[i] = name;\n    } else {\n      seriesName[i] = '';\n    }\n  }\n\n  // Create time-value merged field array from data\n  // mergedFields is used for plotting operation point and drawing dynamic performance curve\n  let mergedFields: MergedFieldsProps[] = createMergedFields(data);\n\n  // Prepare data array for plotting operation point\n  const plotSetting = options.plotSetting;\n  let dataPlot: TimeXYDatumProps[][] = [];\n  let dataLegend: VizLegendItem[] = [];\n  for (let i = 0; i < plotSetting.length; i++) {\n    let fieldPlotX = mergedFields.find((field) => field.name === plotSetting[i].xField);\n    let fieldPlotY = mergedFields.find((field) => field.name === plotSetting[i].yField);\n    if (fieldPlotX && fieldPlotY) {\n      // Create time-x-y merged array\n      let timeXYData: TimeXYDatumProps[] = mergeXYField(fieldPlotX, fieldPlotY);\n      dataPlot[i] = timeXYData;\n      // data for legend\n      dataLegend[i] = {\n        color: plotSetting[i].color,\n        label: plotSetting[i].label,\n        disabled: false,\n        yAxis: 1,\n      };\n    }\n  }\n\n  // Prepare dynamic performance curve data\n  const dynamicPerfCurve = options.dynamicPerfCurve;\n  let dataDynamicCurves: DynamicCurveData[] = [];\n  for (let i = 0; i < dynamicPerfCurve.length; i++) {\n    let fieldGroup = dynamicPerfCurve[i].fieldGroup;\n    dataDynamicCurves[i] = {\n      color: options.dynamicPerfCurve[i].color,\n      data: [],\n    };\n    // j: point(x, y)\n    for (let j = 0; j < fieldGroup.length; j++) {\n      let fieldCurveX = mergedFields.find((field) => field.name === fieldGroup[j].xField);\n      let fieldCurveY = mergedFields.find((field) => field.name === fieldGroup[j].yField);\n      if (fieldCurveX && fieldCurveY) {\n        // Create time-x-y merged array\n        let timeXYData: TimeXYDatumProps[] = mergeXYField(fieldCurveX, fieldCurveY);\n        // data for curve\n        // i:curve, k: time, j: point(x, y)\n        for (let k = 0; k < timeXYData.length; k++) {\n          if (dataDynamicCurves[i].data[k] === undefined) {\n            dataDynamicCurves[i].data[k] = [];\n          }\n          let xPoint = timeXYData[k].x;\n          let yPoint = timeXYData[k].y;\n          if (xPoint && yPoint) {\n            dataDynamicCurves[i].data[k][j] = { x: xPoint, y: yPoint };\n          }\n        }\n      }\n    }\n  }\n\n  // Read X-axis and Y-Axis settings\n  const xMin = options.xAxis.minValue;\n  const xMax = options.xAxis.maxValue;\n  const yMin = options.yAxis.minValue;\n  const yMax = options.yAxis.maxValue;\n\n  // Function to add unit to axis label\n  const getLabelWithUnit = (label: string, unit: string | undefined) => {\n    const unitToIndicate = getValueFormat(unit)(0).suffix;\n    if (unitToIndicate) {\n      return label + ` [${unitToIndicate?.trim()}]`;\n    } else {\n      return label;\n    }\n  };\n\n  // Scale\n  const xScale = d3\n    .scaleLinear()\n    .domain([xMin, xMax || 0.0])\n    .range([padding.left, width - padding.right]);\n  const yScale = d3\n    .scaleLinear()\n    .domain([yMin, yMax || 0.0])\n    .range([height - padding.bottom, padding.top]);\n  // Create axis\n  const xAxis = d3.axisBottom(xScale).ticks(width / 80);\n  const yAxis = d3.axisLeft(yScale).ticks(height / 80);\n\n  // Draw performance curve\n  const curveGenerator = d3\n    .line<ChartDatum>()\n    .curve(d3.curveBasis)\n    .x((d: ChartDatum) => {\n      // To avoid type annotation error, if undefined then 0.0\n      let x = xScale(d.x);\n      if (typeof x === 'undefined') {\n        x = 0.0;\n      }\n      return x;\n    })\n    .y((d: ChartDatum) => {\n      // To avoid type annotation error, if undefined then 0.0\n      let y = yScale(d.y);\n      if (typeof y === 'undefined') {\n        y = 0.0;\n      }\n      return y;\n    });\n  return (\n    <div\n      className={cx(\n        styles.wrapper,\n        css`\n          width: ${width}px;\n          height: ${height}px;\n        `\n      )}\n    >\n      <svg\n        className={styles.svg}\n        width={width}\n        height={height}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        viewBox={`0 0 ${width} ${height}`}\n      >\n        {/* xAxis */}\n        <g\n          transform={`translate(0, ${height - padding.bottom})`}\n          ref={(node) => {\n            d3.select(node).call(xAxis as any);\n          }}\n        >\n          <text\n            x={(width - padding.left - padding.right) / 2 + padding.left}\n            y=\"40\"\n            textAnchor=\"middle\"\n            fill=\"currentColor\"\n            fontSize=\"8pt\"\n          >\n            {getLabelWithUnit(options.xAxis.label, options.xAxis.unit)}\n          </text>\n        </g>\n        {/* yAxis */}\n        <g\n          transform={`translate(${padding.left}, 0)`}\n          ref={(node) => {\n            d3.select(node).call(yAxis as any);\n          }}\n        >\n          <text\n            x={-(height - padding.top - padding.bottom) / 2}\n            y=\"-50\"\n            textAnchor=\"middle\"\n            fill=\"currentColor\"\n            transform=\"rotate(-90)\"\n            fontSize=\"8pt\"\n          >\n            {getLabelWithUnit(options.yAxis.label, options.yAxis.unit)}\n          </text>\n        </g>\n        {/* Grid Vertical Lines */}\n        <g>\n          {xScale.ticks().map((d: number) => {\n            let x = xScale(d);\n            x = typeof x === 'undefined' ? undefined : 0.5 + x;\n            return (\n              <line\n                stroke=\"currentColor\"\n                strokeOpacity=\"0.1\"\n                y1={padding.top}\n                y2={height - padding.bottom}\n                x1={x}\n                x2={x}\n                key={'x_' + x?.toString()}\n              ></line>\n            );\n          })}\n        </g>\n        {/* Grid Horizontal Lines */}\n        <g>\n          {yScale.ticks().map((d: number) => {\n            let y = yScale(d);\n            y = typeof y === 'undefined' ? undefined : 0.5 + y;\n            return (\n              <line\n                stroke=\"currentColor\"\n                strokeOpacity=\"0.1\"\n                x1={padding.left}\n                x2={width - padding.right}\n                y1={y}\n                y2={y}\n                key={'y_' + y?.toString()}\n              ></line>\n            );\n          })}\n        </g>\n        {/* Static Curve */}\n        {dataCurves.map((dataCurve, index) => {\n          return (\n            <g id=\"static-curve-group\" key={'dataCurve' + index.toString()}>\n              <path\n                fill=\"none\"\n                stroke={dataCurve.color}\n                strokeWidth=\"1.5\"\n                id={'curve-' + index}\n                ref={(node) => {\n                  d3.select(node).datum(dataCurve.data).attr('d', curveGenerator);\n                }}\n              />\n            </g>\n          );\n        })}\n        {dataDynamicCurves.map((dataCurve, index) => {\n          return (\n            <g id=\"dynamic-curve-group\" key={'dynamicCurve' + index.toString()}>\n              <Curves\n                fill=\"none\"\n                stroke={dataCurve.color}\n                stroke-width=\"1.5\"\n                index={index}\n                data={dataCurve.data}\n                curveGenerator={curveGenerator}\n              ></Curves>\n            </g>\n          );\n        })}\n        {/* Plot */}\n        <g id=\"plot-group\">\n          {dataPlot.map((data, i) => {\n            return (\n              <PlotCircles\n                data={data}\n                radius={pointRadius}\n                xAxis={options.xAxis}\n                yAxis={options.yAxis}\n                xScale={xScale}\n                yScale={yScale}\n                legend={dataLegend[i]}\n                timeZone={timeZone}\n                key={'plot' + i.toString()}\n              ></PlotCircles>\n            );\n          })}\n        </g>\n      </svg>\n      <div className={styles.legend}>\n        <VizLegend items={dataLegend} displayMode={LegendDisplayMode.List} placement=\"bottom\" />\n      </div>\n    </div>\n  );\n};\n\nconst getStyles = () => {\n  return {\n    wrapper: css`\n      position: relative;\n    `,\n    svg: css`\n      position: absolute;\n      top: 0;\n      left: 0;\n    `,\n    legend: css`\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      padding: 10px;\n    `,\n  };\n};\n","import React from 'react';\nimport { PanelOptionsEditorProps } from '@grafana/data';\nimport { Button, ColorPicker, Tooltip, Input, HorizontalGroup, Label, VerticalGroup } from '@grafana/ui';\nimport { CurvePoints } from './types';\n\ninterface CurveLineFormProps {\n  value: CurvePoints;\n  index?: number;\n  styles?: any;\n  onChangeItem?: (a: CurvePoints, b: number) => void | undefined;\n  onDelete?: (a: number) => void;\n}\n\nclass CurveLineForm extends React.PureComponent<CurveLineFormProps> {\n  constructor(props: CurveLineFormProps) {\n    super(props);\n    this.state = { ...props.value };\n  }\n  render() {\n    const { value, index, onChangeItem, onDelete } = this.props;\n    return (\n      <HorizontalGroup>\n        <Label>X</Label>\n        <Input\n          css=\"\"\n          type=\"text\"\n          name=\"performCurveX\"\n          defaultValue={value.performCurveX}\n          onBlur={(e) => {\n            const performCurveX = e.currentTarget.value;\n            this.setState(() => {\n              return { performCurveX: performCurveX };\n            });\n            onChangeItem && index !== undefined && onChangeItem({ ...value, performCurveX: performCurveX }, index);\n          }}\n        />\n        <Label>Y</Label>\n        <Input\n          css=\"\"\n          type=\"text\"\n          name=\"performCurveY\"\n          defaultValue={value.performCurveY}\n          onBlur={(e) => {\n            const performCurveY = e.currentTarget.value;\n            this.setState(() => {\n              return { performCurveY: performCurveY };\n            });\n            onChangeItem && index !== undefined && onChangeItem({ ...value, performCurveY: performCurveY }, index);\n          }}\n        />\n        <Label>Color</Label>\n        <ColorPicker\n          color={value.color}\n          onChange={(color) => {\n            this.setState(() => {\n              return { color: color };\n            });\n            onChangeItem && index !== undefined && onChangeItem({ ...value, color: color }, index);\n          }}\n        ></ColorPicker>\n        {onDelete && index !== undefined && (\n          <Tooltip content=\"Remove this performance curve.\" theme={'info'}>\n            <Button\n              variant=\"destructive\"\n              icon=\"trash-alt\"\n              size=\"sm\"\n              onClick={() => {\n                onDelete(index);\n              }}\n            ></Button>\n          </Tooltip>\n        )}\n      </HorizontalGroup>\n    );\n  }\n}\n\nexport class CurveLineForms extends React.PureComponent<PanelOptionsEditorProps<CurvePoints[]>> {\n  onChangeItem = (updatedValue: CurvePoints, index: number) => {\n    let newValues = [...this.props.value];\n    newValues[index] = updatedValue;\n    this.props.onChange(newValues);\n  };\n  onAdd = (newValue: CurvePoints) => {\n    let newValues = [...this.props.value, newValue];\n    this.props.onChange(newValues);\n  };\n  onDelete = (index: number) => {\n    let newValues = [...this.props.value];\n    newValues.splice(index, 1);\n    this.props.onChange(newValues);\n  };\n  render() {\n    const curves = this.props.value;\n    return (\n      <VerticalGroup>\n        <Tooltip content=\"Add a new performance curve.\" theme={'info'}>\n          <Button\n            variant=\"secondary\"\n            size=\"sm\"\n            icon=\"plus\"\n            onClick={() => {\n              this.onAdd({\n                performCurveX: '',\n                performCurveY: '',\n                color: 'rgba(136, 136, 136, 0.6)',\n              } as CurvePoints);\n            }}\n          >\n            Add\n          </Button>\n        </Tooltip>\n        {curves.map((curve: CurvePoints, index: number) => {\n          return (\n            <CurveLineForm\n              key={index}\n              value={curve}\n              index={index}\n              onChangeItem={this.onChangeItem}\n              onDelete={this.onDelete}\n              // styles={styles}\n            />\n          );\n        })}\n      </VerticalGroup>\n    );\n  }\n}\n","import React from 'react';\nimport { PanelOptionsEditorProps } from '@grafana/data';\nimport {\n  Button,\n  ControlledCollapse,\n  ColorPicker,\n  HorizontalGroup,\n  Input,\n  Label,\n  Tooltip,\n  VerticalGroup,\n} from '@grafana/ui';\nimport { CurveGroup, CurveItem } from './types';\n\ninterface CurveItemFormProps {\n  value: CurveItem;\n  index: number;\n  onChangeItem: (a: CurveItem, b: number) => void | undefined;\n  onDeleteItem: (a: number) => void;\n}\n\nclass CurveItemForm extends React.PureComponent<CurveItemFormProps> {\n  constructor(props: CurveItemFormProps) {\n    super(props);\n    this.state = { ...props.value };\n  }\n  render() {\n    const { value, index, onChangeItem, onDeleteItem } = this.props;\n    return (\n      <HorizontalGroup>\n        <Label>X</Label>\n        <Input\n          css=\"\"\n          type=\"text\"\n          name=\"xField\"\n          defaultValue={value.xField}\n          onBlur={(e) => {\n            const xField = e.currentTarget.value;\n            this.setState(() => {\n              return { xField: xField };\n            });\n            onChangeItem({ ...value, xField: xField }, index);\n          }}\n        />\n        <Label>Y</Label>\n        <Input\n          css=\"\"\n          type=\"text\"\n          name=\"yField\"\n          defaultValue={value.yField}\n          onBlur={(e) => {\n            const yField = e.currentTarget.value;\n            this.setState(() => {\n              return { yField: yField };\n            });\n            onChangeItem({ ...value, yField: yField }, index);\n          }}\n        />\n        <Tooltip content=\"Remove this point.\" theme={'info'}>\n          <Button\n            variant=\"destructive\"\n            icon=\"trash-alt\"\n            size=\"sm\"\n            onClick={() => {\n              onDeleteItem(index);\n            }}\n          ></Button>\n        </Tooltip>\n      </HorizontalGroup>\n    );\n  }\n}\n\ninterface CurveGroupFormProps {\n  value: CurveGroup;\n  index: number;\n  onChange: (a: CurveGroup, b: number) => void | undefined;\n  onDelete: (a: number) => void;\n}\n\nclass CurveGroupForm extends React.PureComponent<CurveGroupFormProps> {\n  constructor(props: CurveGroupFormProps) {\n    super(props);\n    this.state = { ...props.value };\n  }\n\n  onChangeItem = (updatedValue: CurveItem, index: number) => {\n    let newValues = [...this.props.value.fieldGroup];\n    newValues[index] = updatedValue;\n    this.props.onChange({ fieldGroup: newValues, color: this.props.value.color }, this.props.index);\n  };\n  onAddItem = (newValue: CurveItem) => {\n    let newValues = [...this.props.value.fieldGroup, newValue];\n    this.props.onChange({ fieldGroup: newValues, color: this.props.value.color }, this.props.index);\n  };\n  onDeleteItem = (index: number) => {\n    let newValues = [...this.props.value.fieldGroup];\n    newValues.splice(index, 1);\n    this.props.onChange({ fieldGroup: newValues, color: this.props.value.color }, this.props.index);\n  };\n  render() {\n    const { value, index, onChange, onDelete } = this.props;\n    return (\n      <ControlledCollapse collapsible label={`Line group ${index}`}>\n        <VerticalGroup>\n          <HorizontalGroup>\n            <Tooltip content=\"Remove this line group.\" theme={'info'}>\n              <Button\n                variant=\"destructive\"\n                icon=\"trash-alt\"\n                size=\"sm\"\n                onClick={() => {\n                  onDelete(index);\n                }}\n              ></Button>\n            </Tooltip>\n          </HorizontalGroup>\n          <HorizontalGroup>\n            <Button\n              variant=\"secondary\"\n              size=\"sm\"\n              icon=\"plus\"\n              onClick={() => {\n                this.onAddItem({\n                  xField: '',\n                  yField: '',\n                } as CurveItem);\n              }}\n            >\n              Add Field\n            </Button>\n\n            <Label>Color</Label>\n            <ColorPicker\n              color={value.color}\n              onChange={(color) => {\n                this.setState(() => {\n                  return { color: color };\n                });\n                onChange({ ...value, color: color }, index);\n              }}\n            ></ColorPicker>\n          </HorizontalGroup>\n          {value.fieldGroup.map((item: CurveItem, index: number) => {\n            return (\n              <CurveItemForm\n                key={index}\n                value={item}\n                index={index}\n                onChangeItem={this.onChangeItem}\n                onDeleteItem={this.onDeleteItem}\n              />\n            );\n          })}\n        </VerticalGroup>\n      </ControlledCollapse>\n    );\n  }\n}\n\nexport class DynamicCurveLineForms extends React.PureComponent<PanelOptionsEditorProps<CurveGroup[]>> {\n  onChangeGroup = (updatedValue: CurveGroup, index: number) => {\n    let newValues = [...this.props.value];\n    newValues[index] = updatedValue;\n    this.props.onChange(newValues);\n  };\n  onAddGroup = (newValue: CurveGroup) => {\n    let newValues = [...this.props.value, newValue];\n    this.props.onChange(newValues);\n  };\n  onDeleteGroup = (index: number) => {\n    let newValues = [...this.props.value];\n    newValues.splice(index, 1);\n    this.props.onChange(newValues);\n  };\n  render() {\n    const curves = this.props.value;\n    return (\n      <VerticalGroup>\n        <Button\n          variant=\"secondary\"\n          size=\"sm\"\n          icon=\"plus\"\n          onClick={() => {\n            this.onAddGroup({\n              fieldGroup: [{ xField: '', yField: '' }],\n              color: 'rgba(136, 136, 136, 0.6)',\n            } as CurveGroup);\n          }}\n        >\n          Add\n        </Button>\n        {curves.map((curve: CurveGroup, index: number) => {\n          return (\n            <CurveGroupForm\n              key={index}\n              value={curve}\n              index={index}\n              onChange={this.onChangeGroup}\n              onDelete={this.onDeleteGroup}\n            />\n          );\n        })}\n      </VerticalGroup>\n    );\n  }\n}\n","import React from 'react';\nimport { PanelOptionsEditorProps } from '@grafana/data';\nimport { Button, ColorPicker, HorizontalGroup, Input, Label, Tooltip, VerticalGroup } from '@grafana/ui';\nimport { PlotSeries } from './types';\n\ninterface PlotSeriesrops {\n  value: PlotSeries;\n  index?: number;\n  styles?: any;\n  onChangeItem?: (a: PlotSeries, b: number) => void | undefined;\n  onDelete?: (a: number) => void;\n}\n\nclass PlotSeriesForm extends React.PureComponent<PlotSeriesrops> {\n  constructor(props: PlotSeriesrops) {\n    super(props);\n    this.state = { ...props.value };\n  }\n  render() {\n    const { value, index, onChangeItem, onDelete } = this.props;\n    return (\n      <HorizontalGroup>\n        <Label>Label</Label>\n        <Input\n          css=\"\"\n          type=\"text\"\n          name=\"label\"\n          defaultValue={value.label}\n          onBlur={(e) => {\n            const label = e.currentTarget.value;\n            this.setState(() => {\n              return { label: label };\n            });\n            onChangeItem && index !== undefined && onChangeItem({ ...value, label: label }, index);\n          }}\n        />\n        <Label>X</Label>\n        <Input\n          css=\"\"\n          type=\"text\"\n          name=\"xField\"\n          defaultValue={value.xField}\n          onBlur={(e) => {\n            const xField = e.currentTarget.value;\n            this.setState(() => {\n              return { xField: xField };\n            });\n            onChangeItem && index !== undefined && onChangeItem({ ...value, xField: xField }, index);\n          }}\n        />\n        <Label>Y</Label>\n        <Input\n          css=\"\"\n          type=\"text\"\n          name=\"yField\"\n          defaultValue={value.yField}\n          onBlur={(e) => {\n            const yField = e.currentTarget.value;\n            this.setState(() => {\n              return { yField: yField };\n            });\n            onChangeItem && index !== undefined && onChangeItem({ ...value, yField: yField }, index);\n          }}\n        />\n        <Label>Color</Label>\n        <ColorPicker\n          color={value.color}\n          onChange={(color) => {\n            this.setState(() => {\n              return { color: color };\n            });\n            onChangeItem && index !== undefined && onChangeItem({ ...value, color: color }, index);\n          }}\n        ></ColorPicker>\n        {onDelete && index !== undefined && (\n          <Tooltip content=\"Remove this operation points.\" theme={'info'}>\n            <Button\n              variant=\"destructive\"\n              icon=\"trash-alt\"\n              size=\"sm\"\n              onClick={() => {\n                onDelete(index);\n              }}\n            ></Button>\n          </Tooltip>\n        )}\n      </HorizontalGroup>\n    );\n  }\n}\n\nexport class PlotSeriesForms extends React.PureComponent<PanelOptionsEditorProps<PlotSeries[]>> {\n  onChangeItem = (updatedValue: PlotSeries, index: number) => {\n    let newValues = [...this.props.value];\n    newValues[index] = updatedValue;\n    this.props.onChange(newValues);\n  };\n  onAdd = (newValue: PlotSeries) => {\n    let newValues = [...this.props.value, newValue];\n    this.props.onChange(newValues);\n  };\n  onDelete = (index: number) => {\n    let newValues = [...this.props.value];\n    newValues.splice(index, 1);\n    this.props.onChange(newValues);\n  };\n  render() {\n    const curves = this.props.value;\n    return (\n      <VerticalGroup>\n        <Tooltip content=\"Add a new plot.\" theme={'info'}>\n          <Button\n            variant=\"secondary\"\n            size=\"sm\"\n            icon=\"plus\"\n            onClick={() => {\n              this.onAdd({\n                label: '',\n                xField: '',\n                yField: '',\n                color: 'rgba(136, 136, 136, 0.6)',\n              } as PlotSeries);\n            }}\n          >\n            Add\n          </Button>\n        </Tooltip>\n        {curves.map((curve: PlotSeries, index: number) => {\n          return (\n            <PlotSeriesForm\n              key={index}\n              value={curve}\n              index={index}\n              onChangeItem={this.onChangeItem}\n              onDelete={this.onDelete}\n            />\n          );\n        })}\n      </VerticalGroup>\n    );\n  }\n}\n","import React from 'react';\nimport { PanelOptionsEditorProps } from '@grafana/data';\nimport { Input, HorizontalGroup, Label, UnitPicker, VerticalGroup } from '@grafana/ui';\nimport { Axis } from './types';\n\nexport class AxisForms extends React.PureComponent<PanelOptionsEditorProps<Axis>> {\n  render() {\n    const axis = this.props.value;\n    return (\n      <VerticalGroup>\n        <HorizontalGroup>\n          <Label>Min</Label>\n          <Input\n            css=\"\"\n            type=\"number\"\n            name=\"minValue\"\n            value={axis.minValue}\n            onChange={(e) => {\n              const minValue = e.currentTarget.value;\n              this.setState(() => {\n                return { minValue: Number(minValue) };\n              });\n              this.props.onChange({ ...this.props.value, minValue: Number(minValue) });\n            }}\n          />\n          <Label>Max</Label>\n          <Input\n            css=\"\"\n            type=\"number\"\n            name=\"maxValue\"\n            defaultValue={axis.maxValue}\n            onChange={(e) => {\n              const maxValue = e.currentTarget.value;\n              this.setState(() => {\n                return { maxValue: Number(maxValue) };\n              });\n              this.props.onChange({ ...this.props.value, maxValue: Number(maxValue) });\n            }}\n          />\n          <Label>Label</Label>\n          <Input\n            css=\"\"\n            type=\"text\"\n            name=\"label\"\n            defaultValue={axis.label}\n            onChange={(e) => {\n              const label = e.currentTarget.value;\n              this.props.onChange({ ...this.props.value, label: label });\n              this.setState(() => {\n                return { label: label };\n              });\n            }}\n          />\n        </HorizontalGroup>\n        <HorizontalGroup>\n          <Label>Unit</Label>\n          <UnitPicker\n            value={axis.unit}\n            onChange={(unit) => {\n              this.props.onChange({ ...this.props.value, unit: unit });\n              this.setState(() => {\n                return { unit: unit };\n              });\n            }}\n          />\n          <Label>Decimals</Label>\n          <Input\n            css=\"\"\n            type=\"number\"\n            name=\"decimals\"\n            defaultValue={axis.decimals}\n            onChange={(e) => {\n              const decimals = e.currentTarget.value;\n              this.props.onChange({ ...this.props.value, decimals: Number(decimals) });\n              this.setState(() => {\n                return { decimals: decimals };\n              });\n            }}\n          />\n        </HorizontalGroup>\n      </VerticalGroup>\n    );\n  }\n}\n","import { PanelPlugin } from '@grafana/data';\nimport { CanvasOptions } from './types';\nimport { PerformanceCurvePanel } from './PerformanceCurvePanel';\nimport { CurveLineForms } from './CurveLineForms';\nimport { DynamicCurveLineForms } from './DynamicCurveLineForms';\nimport { PlotSeriesForms } from './PlotSeriesForms';\nimport { AxisForms } from './AxisForms';\n\nexport const plugin = new PanelPlugin<CanvasOptions>(PerformanceCurvePanel).setPanelOptions((builder) => {\n  return builder\n    .addCustomEditor({\n      category: ['Axes'],\n      id: 'xAxis',\n      path: 'xAxis',\n      name: 'X-axis',\n      defaultValue: {\n        minValue: 0,\n        maxValue: 60,\n        label: 'Flowrate',\n        unit: undefined,\n        decimals: undefined,\n      },\n      editor: AxisForms,\n    })\n    .addCustomEditor({\n      category: ['Axes'],\n      id: 'yAxis',\n      path: 'yAxis',\n      name: 'Y-axis',\n      defaultValue: {\n        minValue: 0,\n        maxValue: 100,\n        label: 'Pressure',\n        unit: undefined,\n        decimals: undefined,\n      },\n      editor: AxisForms,\n    })\n    .addCustomEditor({\n      category: ['Performance curve'],\n      id: 'performanceCurveData',\n      path: 'performanceCurveData',\n      name: 'Static performance curve',\n      description: 'Input sample data points of peformance curve. Program automatically draw smooth lines.',\n      defaultValue: [\n        {\n          performCurveX: '10,20,30,40,50',\n          performCurveY: '80,78,72,62,48',\n          color: 'rgba(136, 136, 136, 0.6)',\n        },\n      ],\n      editor: CurveLineForms,\n    })\n    .addCustomEditor({\n      category: ['Performance curve'],\n      id: 'dynamicPerfCurve',\n      path: 'dynamicPerfCurve',\n      name: 'Dynamic performance curve',\n      description: 'Set filed names to draw dynamic peformance curve. Program automatically draw smooth lines.',\n      defaultValue: [],\n      editor: DynamicCurveLineForms,\n    })\n\n    .addCustomEditor({\n      category: ['Operation points'],\n      id: 'plotSetting',\n      path: 'plotSetting',\n      name: 'Operation points',\n      description: 'Set field names of X and Y axis to plot operation points. Set alias in query to set field name.',\n      defaultValue: [\n        {\n          label: 'Label Name',\n          xField: 'Field X',\n          yField: 'Field Y',\n          color: 'rgba(136, 136, 136, 0.6)',\n        },\n      ],\n      editor: PlotSeriesForms,\n    })\n    .addSelect({\n      category: ['Operation points'],\n      path: 'pointRadius',\n      name: 'Point radius',\n      defaultValue: 2,\n      settings: {\n        options: [\n          {\n            label: '0.5',\n            value: 0.5,\n          },\n          {\n            label: '1',\n            value: 1,\n          },\n          {\n            label: '2',\n            value: 2,\n          },\n          {\n            label: '3',\n            value: 3,\n          },\n          {\n            label: '4',\n            value: 4,\n          },\n          {\n            label: '5',\n            value: 5,\n          },\n          {\n            label: '6',\n            value: 6,\n          },\n          {\n            label: '7',\n            value: 7,\n          },\n          {\n            label: '8',\n            value: 8,\n          },\n          {\n            label: '9',\n            value: 9,\n          },\n          {\n            label: '10',\n            value: 10,\n          },\n        ],\n      },\n    });\n});\n"],"sourceRoot":""}